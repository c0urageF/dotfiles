;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(string-rectangle-history search-ring grep-files-history grep-regexp-history grep-history irony--server-install-command-history file-name-history iswitchb-history buffer-name-history yes-or-no-p-history minibuffer-history extended-command-history))
(setq string-rectangle-history '("	"))
(setq search-ring '("auto-inser" "proc_on" "GetString" "st_Create" "lh_InitAsr" "lh_InitSsr" "Clear" "Standard" "Stand" "deletedate" "Release" "fn" "pspellresult" "setspellrecognitionresult" "createspellrecognitionresult" "("))
(setq grep-files-history '("*.cc *.cxx *.cpp *.C *.CC *.c++"))
(setq grep-regexp-history '("ObjectList" "::DeleteData" "Delete" "Clear" "NobjList" "NList" "CreateRecogResult"))
(setq grep-history '("grep -nH -e "))
(setq irony--server-install-command-history '("cmake -DCMAKE_INSTALL_PREFIX\\=/home/c0urage/.emacs.d/irony/ /home/c0urage/.emacs.d/elpa/irony-20161106.830/server && cmake --build . --use-stderr --config Release --target install"))
(setq file-name-history '("~/.emacs.d/init.el" "~/workspaces/MachineLearning/Perceptron/perceptron.py" "~/workspaces/MachineLearning/LinearRegression/linearregression.py" "~/workspaces/MachineLearning/NaiveBayes/naivebayes.py" "~/workspaces/MachineLearning/BayesLinearRegression/sample.py" "~/.emacs.d/init.el" "~/workspaces/MachineLearning/BayesLinearRegression/bayesLinearRegression.py" "~/workspaces/MachineLearning/NaiveBayes/naivebayes.py" "~/.emacs.d/insert/template.py" "~/.emacs.d/insert/template.rb" "~/.emacs.d/insert/template.sh" "~/.emacs.d/insert/template.pl" "~/.emacs.d/insert/template.sh" "~/.emacs.d/insert/template.cpp" "~/.emacs.d/insert/template.h" "~/.emacs.d/init.el" "~/workspaces/MachineLearning/NaiveBayes/naivebayes.py" "~/workspaces/SpamFillter/naivebayes.py" "~/workspaces/SpamFillter/morphological.py" "~/workspaces/SpamFillter/naivebayes.py" "~/tmp/lpcspdtFbnk/AAfbnkBFNR." "~/tmp/lpcspdtFbnk/AAfbnk.make" "~/tmp/lpcspdtFbnk/ALLmake.csh" "~/tmp/lpcspdtFbnk/lpcspdtThread_source.h" "~/workspaces/workspace/StandardLib-Common/NStandardLib/src-common/" "~/workspaces/workspace/" "~/workspaces/workspace/StandardLib-Common/NStandardLib/src-common/" "~/tmp/log_project/sample.txt" "~/tmp/log_project/hello_world.cpp" "~/workspaces/workspace/VRCore-Common/VRCore/src-common/VRManager/VII/VII_VRThread/Wrapper/Nuance" "~/workspaces/workspace/VRCore-Common/VRCore/src-common/VRManager/VII/VII_VRThread/Wrapper/Nuance/Engine/Component/VII_VoconEngine_Asr.cpp" "~/workspaces/workspace/VRCore-Common/VRCore/src-common/VRManager/VII/VII_VRThread/Wrapper/Nuance/" "~/workspaces/workspace/VRCore-Common/VRCore/src-common/VRManager/VII/VII_VRThread/Wrapper" "~/workspaces/workspace/VRCore-Common/VRCore/src-common/VRManager/VII/VII_VRThread/Wrapper/VII_VRCallbackInterface.h" "~/tmp/log_project/hello_world.cpp" "~/tmp/log_project/hello_world" "~/tmp/log_project/CMakeLists.txt" "~/tmp/log_project/hello_world.cpp" "~/tmp/log_project/trace/CMakeLists.txt" "~/tmp/log_project/CMakeLists.txt" "~/tmp/log_project/simpletrace.cpp" "~/tmp/log_project/hello_world.cpp" "~/tmp/log_project/CMakeLists.txt" "~/tmp/log_sampl" "~/tmp/log_sample/CMakeList.txt" "~/tmp/log_sample/simpletrace.cpp" "~/.emacs.d/private-conf/myproxy.el" "~/Confidencial/Contenor/NPArray.hpp"))
(setq iswitchb-history '("bayesL" "lin" "na" "li" "NList" "he" "CMakeLists.txt<2>" "CMakeLists.txt" "ini" "init"))
(setq buffer-name-history '("lispxmp.el" "*scratch*" "*Completions*" "package-install.el" "sticky.el" "*auto-install http://www.emacswiki.org/emacs/download/el-expectations-failure-sample.el <10/29 05:55:01>*" "*auto-install http://www.emacswiki.org/emacs/download/el-mock.el <10/29 05:55:01>*" "ert-expectations.el" "*auto-install http://www.emacswiki.org/emacs/download/el-expectations-success-sample.el <10/29 05:55:01>*" "auto-async-byte-empile.el" "edit-list.el" "eldoc-extension.el" "multi-shell.el" "grep-edit.el" "grep-a-lot.el" "igrep.el" "moccur-edit.el" "color-moccur.el" "popup.el" "fuzzy.el" "auto-complete.el" "auto-complete-config.el" "redo+.el" "screen-lines.el" "auto-save-buffers.el" "tempbuf.el" "recentf-ext.el" "ffap.el.gz"))
(setq yes-or-no-p-history '("no"))
(setq minibuffer-history '("67" "helm" "yasnipet-config.el" "undo-tree" "undohist" "yasnippet" "rtags" "flycheck-irony" "flycheck" "company-irony-c-headers" "irony-eldoc" "http://www.dur.uk/p.j.heslin/Software/Emacs/Download/fold-dwim.el" "recentf-ext.el" "translator" "summarye.el" "open-junk-file.el" "lispxmp.el" "el-expectations" "http://mwolson.org/static/dist/elisp/edit-list.el" "eldoc-extension.el" "http://mumble.net/~campbell/emacs/paredit.el" "multi-shell.el" "grep-edit.el" "grep-a-lot.el" "igrep.el" "igrep.;el" "moccur-edit.el" "color-moccur.el" "auto-complete development version" "redo+.el" "http://homepage1.nifty.com/bmonkey/emacs/elisp/screen-lines.el" "http://homepage3.nifty.com/oatu/emacs/archives/auto-save-buffers.el" "tempbuf.el" "recentf-ext.el" "ffap.el" "sticky.el" "http://tromey.com/elpa/package-install.el" "auto-async-byte-empile.el"))
(setq extended-command-history '("rgrep" "grep" "eval-buffer" "package-install" "package-refresh-contents" "package-install" "eval-buffer" "package-install" "eval-buffer" "list-packages" "eval-buffer" "list-packages" "package-install" "eval-buffer" "package-install" "eval-buffer" "list-packages" "package-install" "eval-buffer" "package-refresh-contents" "package-install" "package-refresh-contents" "list-packages" "install-elisp-from-emacswiki" "package-install" "irony-install-server" "package-install" "list-packages" "package-install" "install-elisp-from-emacswiki" "install-elisp" "install-elisp-from-emacswiki" "install-elisp" "eval-buffer" "install-elisp-from-emacswiki" "eval-buffer" "auto-install-batch" "install-elisp-from-emacswiki" "auto-install-batch" "install-elisp" "install-elisp-from-emacswiki" "install-elisp" "install-elisp-from-emacswiki" "auto-install-batch" "package-list-packages" "install-elisp-from-emacswiki" "install-elisp" "install-elisp-from-emacswiki" "install-elisp" "install-elisp-from-emacswiki"))
