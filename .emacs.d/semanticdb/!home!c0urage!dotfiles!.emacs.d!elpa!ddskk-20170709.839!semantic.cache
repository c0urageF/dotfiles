;; Object ddskk-20170709.839/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ddskk-20170709.839/"
  :tables
  (list
    (semanticdb-table "ddskk-autoloads.el"
      :major-mode 'emacs-lisp-mode
      :tags nil
      :file "ddskk-autoloads.el"
      :pointmax 283
      :fsize 47121
      :lastmodtime '(23227 39566 880623 572000)
      :unmatched-syntax nil)
    (semanticdb-table "skk.el"
      :file "skk.el"
      :fsize 207549
      :lastmodtime '(23227 39565 116642 748000))
    (semanticdb-table "skk-macs.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("skk-emacs-modeline-property" variable nil nil [1160 1196])
            ("mule-version" variable nil nil [1136 1157])
            ("advice" include nil nil [1220 1237])
            ("skk-vars" include nil nil [1260 1279])
            ("skk-defadvice" function (:arguments ("function" "everything-else")) nil [1295 2838])
            ("put" code nil nil [2855 2904])
            ("def-edebug-spec" code nil nil [2905 2946])
            ("skk-save-point" function (:arguments ("body")) nil [2948 3149])
            ("def-edebug-spec" code nil nil [3151 3185])
            ("skk-message" function (:arguments ("japanese" "english" "arg")) nil [3187 3586])
            ("skk-error" function (:arguments ("japanese" "english" "arg")) nil [3588 3997])
            ("skk-yes-or-no-p" function (:arguments ("japanese" "english")) nil [3999 4390])
            ("skk-y-or-n-p" function (:arguments ("japanese" "english")) nil [4392 4662])
            ("skk-set-marker" function (:arguments ("marker" "position" "buffer")) nil [4664 4939])
            ("skk-with-point-move" function (:arguments ("form")) nil [4941 5101])
            ("def-edebug-spec" code nil nil [5103 5142])
            ("skk-face-on" function (:arguments ("object" "start" "end" "face" "priority")) nil [5144 5918])
            ("put" code nil nil [5935 5986])
            ("skk-loop-for-buffers" function (:arguments ("buffers" "body")) nil [5987 6195])
            ("skk-called-interactively-p" function (:arguments ("kind")) nil [6197 6818])
            ("skk-delete-overlay" function (:arguments ("list")) nil [6820 6998])
            ("skk-set-deactivate-im-func" function (:arguments ("func")) nil [7000 7274])
            ("skk-deactivate-input-method" function nil nil [7276 7474])
            ("skk-facep" function (:arguments ("face")) nil [7476 7576])
            ("skk-help-make-usage" function (:arguments ("symbol" "arglist")) nil [7578 7793])
            ("when" code nil nil [7879 8041])
            ("string-to-int-list" function (:arguments ("string")) nil [8751 8895])
            ("when" code nil nil [8909 9169])
            ("when" code nil nil [9171 9662])
            ("when" code nil nil [9664 9894])
            ("when" code nil nil [9896 10510])
            ("when" code nil nil [10536 13270])
            ("when" code nil nil [13290 13735])
            ("when" code nil nil [13737 14145])
            ("skk-ding" function (:arguments ("arg" "sound" "device")) nil [14147 14328])
            ("skk-color-cursor-display-p" function nil nil [14330 14600])
            ("skk-char-to-unibyte-string" function (:arguments ("char")) nil [14602 15102])
            ("skk-ascii-char-p" function (:arguments ("char")) nil [15104 15313])
            ("skk-jisx0208-p" function (:arguments ("char")) nil [15315 15546])
            ("skk-jisx0213-p" function (:arguments ("char")) nil [15548 15905])
            ("skk-split-char" function (:arguments ("ch")) nil [15907 16578])
            ("skk-char-charset" function (:arguments ("ch" "restriction")) nil [16580 16777])
            ("skk-charsetp" function (:arguments ("object")) nil [16828 16965])
            ("skk-indicator-to-string" function (:arguments ("indicator" "no-properties")) nil [16967 17340])
            ("skk-mode-string-to-indicator" function (:arguments ("mode" "string")) nil [17342 17708])
            ("skk-local-variable-p" function (:arguments ("variable" "buffer" "afterset")) nil [17710 18067])
            ("skk-face-proportional-p" function (:arguments ("face")) nil [18069 18290])
            ("skk-event-key" function (:arguments ("event")) nil [18292 18676])
            ("skk-last-command-char" function nil nil [19020 19157])
            ("skk-set-last-command-char" function (:arguments ("char")) nil [19159 19321])
            ("skk-region-active-p" function nil nil [19323 19504])
            ("put" code nil nil [19506 19563])
            ("skk-bind-last-command-char" function (:arguments ("char" "body")) nil [19564 19777])
            ("skk-process-kill-without-query" function (:arguments ("process")) nil [19779 19976])
            ("skk-char-octet" function (:arguments ("ch" "n")) nil [20003 20120])
            ("skk-cursor-set" function (:arguments ("color" "force")) nil [20122 20319])
            ("skk-cursor-off" function nil nil [20321 20475])
            ("skk-modify-indicator-alist" function (:arguments ("mode" "string")) nil [20477 20628])
            ("skk-update-modeline" function (:arguments ("mode" "string")) nil [20630 21001])
            ("skk-make-rule-tree" function (:arguments ("char" "prefix" "nextstate" "kana" "branch-list")) nil [21028 21187])
            ("skk-get-prefix" function (:arguments ("tree")) nil [21534 21581])
            ("skk-get-nextstate" function (:arguments ("tree")) nil [21583 21633])
            ("skk-set-nextstate" function (:arguments ("tree" "nextstate")) nil [21635 21774])
            ("skk-get-kana" function (:arguments ("tree")) nil [21776 21821])
            ("skk-set-kana" function (:arguments ("tree" "kana")) nil [21823 21890])
            ("skk-get-branch-list" function (:arguments ("tree")) nil [21892 21944])
            ("skk-set-branch-list" function (:arguments ("tree" "branch-list")) nil [21946 22034])
            ("skk-add-branch" function (:arguments ("tree" "branch")) nil [22074 22183])
            ("skk-select-branch" function (:arguments ("tree" "char")) nil [22185 22266])
            ("skk-erase-prefix" function (:arguments ("clean")) nil [22268 22850])
            ("skk-kana-cleanup" function (:arguments ("force")) nil [22864 23506])
            ("skk-numeric-p" function nil nil [23541 23649])
            ("skk-file-exists-and-writable-p" function (:arguments ("file")) nil [23651 23801])
            ("skk-share-private-jisyo-p" function nil nil [23803 23878])
            ("skk-lower-case-p" function (:arguments ("char")) nil [23880 23988])
            ("skk-downcase" function (:arguments ("char")) nil [23990 24214])
            ("skk-mode-off" function nil nil [24216 24506])
            ("skk-j-mode-on" function (:arguments ("katakana")) nil [24508 24840])
            ("skk-latin-mode-on" function nil nil [24842 25114])
            ("skk-jisx0208-latin-mode-on" function nil nil [25116 25406])
            ("skk-abbrev-mode-on" function nil nil [25408 25944])
            ("skk-in-minibuffer-p" function nil nil [25946 26070])
            ("skk-window-body-height" function nil nil [26072 26219])
            ("skk-screen-column" function nil nil [26236 26460])
            ("skk-move-to-screen-column" function (:arguments ("col")) nil [26501 26756])
            ("skk-max-string-width" function (:arguments ("list")) nil [26758 26882])
            ("skk-insert-prefix" function (:arguments ("char")) nil [26884 27512])
            ("skk-string-lessp-in-coding-system" function (:arguments ("str1" "str2" "coding-system")) nil [27514 27684])
            ("skk-string<" function (:arguments ("str1" "str2")) nil [27686 28053])
            ("skk-string<=" function (:arguments ("str1" "str2")) nil [28055 28204])
            ("skk-do-auto-fill" function nil nil [28206 28344])
            ("skk-current-input-mode" function nil nil [28346 28535])
            ("skk-get-current-candidate-1" function (:arguments ("count")) nil [28634 28908])
            ("skk-make-raw-arg" function (:arguments ("arg")) nil [29257 29369])
            ("skk-unread-event" function (:arguments ("event")) nil [29371 29506])
            ("skk-get-last-henkan-datum" function (:arguments ("key")) nil [29508 29590])
            ("skk-put-last-henkan-data" function (:arguments ("alist")) nil [29805 30022])
            ("skk-find-coding-system" function (:arguments ("code")) nil [30024 30579])
            ("skk-lisp-prog-p" function (:arguments ("string")) nil [30581 30912])
            ("skk-eval-string" function (:arguments ("string")) nil [30914 31688])
            ("skk-minibuffer-origin" function nil nil [31743 31802])
            ("skk-quote-char-1" function (:arguments ("word" "alist")) nil [31804 31993])
            ("skk-key-binding-member" function (:arguments ("key" "commands" "map")) nil [31995 32448])
            ("skk-update-minor-mode-map-alist" function (:arguments ("mode" "map")) nil [32450 32650])
            ("skk-put-alist" function (:arguments ("key" "value" "alist")) nil [32686 33050])
            ("skk-del-alist" function (:arguments ("key" "alist")) nil [33052 33247])
            ("skk-remove-alist" function (:arguments ("symbol" "key")) nil [33249 33447])
            ("skk-fit-window" function (:arguments ("window")) nil [33449 33719])
            ("skk-reset-henkan-count" function (:arguments ("count")) nil [33721 33975])
            ("skk-escape-from-show-candidates" function (:arguments ("count")) nil [33977 34111])
            ("skk-macs" package nil nil [34113 34132]))          
      :file "skk-macs.el"
      :pointmax 34160
      :fsize 37374
      :lastmodtime '(23227 39566 484627 877000)
      :unmatched-syntax '((close-paren 1279 . 1280) (symbol 1241 . 1257) (open-paren 1240 . 1241) (close-paren 1237 . 1238) (symbol 1200 . 1217) (open-paren 1199 . 1200) (close-paren 1196 . 1197) (symbol 1116 . 1133) (open-paren 1115 . 1116)))
    (semanticdb-table "skk-vars.el"
      :file "skk-vars.el"
      :fsize 213066
      :lastmodtime '(23227 39565 416639 486000)))
  :file "!home!c0urage!dotfiles!.emacs.d!elpa!ddskk-20170709.839!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
