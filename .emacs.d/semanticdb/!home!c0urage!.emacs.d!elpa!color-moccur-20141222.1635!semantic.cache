;; Object color-moccur-20141222.1635/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "color-moccur-20141222.1635/"
  :tables
  (list
    (semanticdb-table "color-moccur.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [16594 16607])
            ("color-moccur" customgroup (:user-visible-flag t) nil [16610 16683])
            ("moccur-face" variable
               (:user-visible-flag t
                :default-value (quote ((((class color) (background dark)) (:background "light grey" :bold t :foreground "Black")) (((class color) (background light)) (:background "light cyan" :bold t)) (t nil)))
                :type "face")
                nil [16719 17032])
            ("moccur-current-line-face" variable
               (:user-visible-flag t
                :default-value (quote ((((class color) (background dark)) (:underline t)) (((class color) (background light)) (:underline t)) (t nil)))
                :type "face")
                nil [17034 17270])
            ("moccur-kill-moccur-buffer" variable (:user-visible-flag t) nil [17272 17444])
            ("moccur-use-migemo" variable (:user-visible-flag t) nil [17446 17594])
            ("moccur-split-word" variable (:user-visible-flag t) nil [17596 17910])
            ("color-moccur-default-ime-status" variable
               (:user-visible-flag t
                :default-value t)
                nil [17912 18042])
            ("*moccur-buffer-name-exclusion-list*" variable (:default-value (quote ("TAGS" "*Completions*" "*Messages*" "^[ ].+"))) nil [18044 18347])
            ("*moccur-buffer-name-inclusion-list*" variable (:default-value (quote ("[^ ].*"))) nil [18349 18592])
            ("dmoccur-mask" variable (:default-value (quote (".*"))) nil [18594 18699])
            ("dmoccur-maximum-size" variable (:user-visible-flag t) nil [18701 18907])
            ("dmoccur-exclusion-mask" variable
               (:user-visible-flag t
                :default-value (quote ("\\.elc$" "\\.exe$" "\\.dll$" "\\.lib$" "\\.lzh$" "\\.zip$" "\\.deb$" "\\.gz$" "\\.pdf$" "\\.tar$" "\\.gz$" "\\.7z$" "\\.o$" "\\.a$" "\\.mod$" "\\.nc$" "\\.obj$" "\\.ai$" "\\.fla$" "\\.swf$" "\\.dvi$" "\\.pdf$" "\\.bz2$" "\\.tgz$" "\\.cab$" "\\.sea$" "\\.bin$" "\\.fon$" "\\.fnt$" "\\.scr$" "\\.tmp$" "\\.wrl$" "\\.Z$" "\\.aif$" "\\.aiff$" "\\.mp3$" "\\.wma$" "\\.mpg$" "\\.mpeg$" "\\.aac$" "\\.mid$" "\\.au$" "\\.avi$" "\\.dcr$" "\\.dir$" "\\.dxr$" "\\.midi$" "\\.mov$" "\\.ra$" "\\.ram$" "\\.vdo$" "\\.wav$" "\\.doc$" "\\.xls$" "\\.ppt$" "\\.mdb$" "\\.adp$" "\\.wri$" "\\.jpg$" "\\.gif$" "\\.tiff$" "\\.tif$" "\\.bmp$" "\\.png$" "\\.pbm$" "\\.jpeg$" "\\.xpm$" "\\.pbm$" "\\.ico$" "\\.eps$" "\\.psd$" "/TAGS$" "\\~$" "\\.svn/.+" "CVS/.+" "\\.git/.+")))
                nil [18909 20047])
            ("dmoccur-use-list" variable nil nil [20049 20179])
            ("dmoccur-use-project" variable nil nil [20181 20314])
            ("moccur-use-ee" variable nil nil [20316 20456])
            ("kill-buffer-after-dired-do-moccur" variable nil nil [20458 20606])
            ("dmoccur-list" variable
               (:user-visible-flag t
                :default-value (quote (("dir" default-directory (".*") dir) ("lisp" "~/mylisp/" ("\\.el" "\\.*texi") nil))))
                nil [20608 22284])
            ("moccur-maximum-displayed-with-color" variable (:default-value 500) nil [22286 22424])
            ("dmoccur-recursive-search" variable nil nil [22426 22556])
            ("moccur-buffer-sort-method" variable (:default-value (quote moccur-filepath-string<)) nil [22558 22692])
            ("moccur-special-word-list" variable (:default-value (quote ((";" moccur-face-initialization moccur-comment-check) ("/" moccur-face-initialization moccur-comment-check) ("\"" moccur-face-initialization moccur-string-check) ("!" moccur-face-initialization moccur-function-check) (t moccur-default-initial-function moccur-default-check-function)))) nil [22694 23432])
            ("moccur-kill-buffer-after-goto" variable nil nil [23434 23587])
            ("moccur-search-keyword-alist" variable
               (:user-visible-flag t
                :default-value (quote (("url" . "[fht]*ttp://[-_.!~*'()a-zA-Z0-9;/?:@&=+$,%#]+") ("mail" . "[^][<>@ 
]+@[-_!~*'()a-zA-Z0-9?@&=+$,%#]+\\.[-_.!~*'()a-zA-Z0-9?@&=+$,%#]+"))))
                nil [23589 23940])
            ("moccur-use-keyword" variable nil nil [23942 24073])
            ("moccur-use-xdoc2txt" variable (:default-value (if (and (locate-library "xdoc2txt.exe" nil exec-path) (if (file-name-extension shell-file-name) (locate-library shell-file-name nil exec-path) (locate-library (concat shell-file-name ".exe") nil exec-path))) t nil)) nil [24075 24588])
            ("moccur-grep-xdoc2txt-maximum-size" variable
               (:user-visible-flag t
                :default-value 1000)
                nil [24590 24731])
            ("moccur-grep-xdoc2txt-exts" variable
               (:user-visible-flag t
                :default-value (quote ("\\.rtf" "\\.doc" "\\.xls" "\\.ppt" "\\.jaw" "\\.jtw" "\\.jbw" "\\.juw" "\\.jfw" "\\.jvw" "\\.jtd" "\\.jtt" "\\.oas" "\\.oa2" "\\.oa3" "\\.bun" "\\.wj2" "\\.wj3" "\\.wk3" "\\.wk4" "\\.123" "\\.wri" "\\.pdf" "\\.mht")))
                nil [24733 25331])
            ("moccur-following-mode-toggle" variable (:default-value t) nil [25333 25525])
            ("moccur-grep-following-mode-toggle" variable (:default-value t) nil [25527 25734])
            ("moccur-grep-default-word-near-point" variable nil nil [25736 25890])
            ("moccur-grep-default-mask" variable nil nil [25892 26003])
            ("make-variable-buffer-local" code nil nil [26004 26058])
            ("moccur-buffer-heading-regexp" variable (:default-value "^[-+ ]*Buffer: \\([^
]+\\) File: \\([^
]+\\)$") nil [26095 26253])
            ("moccur-grep-buffer-heading-regexp" variable (:default-value "^[-+ ]*Buffer: File (grep): \\([^
]+\\)$") nil [26254 26414])
            ("moccur-line-number-regexp" variable (:default-value "^[ ]*\\([0-9]+\\) ") nil [26415 26525])
            ("moccur-list" variable nil nil [26526 26550])
            ("moccur-overlays" variable nil nil [26551 26579])
            ("make-variable-buffer-local" code nil nil [26580 26625])
            ("moccur-current-line-overlays" variable nil nil [26626 26667])
            ("moccur-regexp-color" variable nil nil [26668 26699])
            ("moccur-regexp-list" variable nil nil [26700 26731])
            ("moccur-file-name-regexp" variable nil nil [26732 26768])
            ("moccur-regexp-input" variable nil nil [26769 26800])
            ("moccur-buffer-name" variable nil nil [26801 26831])
            ("moccur-buffer-match-count" variable nil nil [26832 26870])
            ("moccur-before-buffer-name" variable nil nil [26871 26908])
            ("moccur-line" variable nil nil [26909 26933])
            ("buffer-menu-moccur" variable nil nil [26934 26965])
            ("moccur-view-other-window" variable (:default-value t) nil [26966 27001])
            ("make-variable-buffer-local" code nil nil [27002 27056])
            ("moccur-view-other-window-nobuf" variable (:default-value t) nil [27057 27098])
            ("make-variable-buffer-local" code nil nil [27099 27159])
            ("moccur-current-buffer" variable nil nil [27160 27194])
            ("moccur-buffer-position" variable nil nil [27195 27230])
            ("make-variable-buffer-local" code nil nil [27231 27283])
            ("moccur-buffers" variable nil nil [27284 27311])
            ("moccur-match-buffers" variable nil nil [27312 27345])
            ("moccur-buffers-before-moccur" variable nil nil [27346 27387])
            ("moccur-matches" variable nil nil [27388 27415])
            ("moccur-mocur-buffer" variable nil nil [27416 27448])
            ("moccur-last-command" variable nil nil [27449 27481])
            ("moccur-windows-conf" variable nil nil [27482 27514])
            ("moccur-special-word" variable nil nil [27515 27547])
            ("moccur-fontlock-buffer" variable nil nil [27548 27583])
            ("make-variable-buffer-local" code nil nil [27584 27636])
            ("dmoccur-mask-internal" variable nil nil [27650 27684])
            ("dmoccur-history" variable nil nil [27685 27713])
            ("dmoccur-list-history" variable nil nil [27714 27747])
            ("dmoccur-buffer-project" variable nil nil [27748 27783])
            ("make-variable-buffer-local" code nil nil [27784 27836])
            ("dmoccur-project-name" variable nil nil [27837 27870])
            ("dmoccur-project-list" variable nil nil [27871 27904])
            ("dmoccur-recursive-ignore-dir" variable nil nil [27905 27946])
            ("moccur-grep-buffer-list" variable nil nil [27964 28000])
            ("make-variable-buffer-local" code nil nil [28001 28054])
            ("moccur-xdoc2txt-buffers" variable nil nil [28055 28091])
            ("make-variable-buffer-local" code nil nil [28092 28145])
            ("moccur-run-meadow-onwin" variable (:default-value (and (and (null (or (equal system-type (quote gnu/linux)) (equal system-type (quote usg-unix-v)))) (or (equal system-type (quote windows-nt)) (equal system-type (quote ms-dos)))) (featurep (quote meadow)))) nil [28146 28416])
            ("moccur-grep-search-file-pos" variable nil nil [28417 28457])
            ("string>" function (:arguments ("a" "b")) nil [28477 28605])
            ("migemo-get-pattern" function (:prototype-flag t) nil [28606 28670])
            ("unless" code nil nil [28687 28788])
            ("when" code nil nil [28789 29054])
            ("isearch-moccur" function (:user-visible-flag t) nil [29108 29473])
            ("isearch-moccur-all" function (:user-visible-flag t) nil [29475 29915])
            ("define-key" code nil nil [29917 29974])
            ("define-key" code nil nil [29975 30036])
            ("occur-by-moccur" function
               (:user-visible-flag t
                :arguments ("regexp" "arg"))
                nil [30053 30450])
            ("moccur-filepath-string<" function (:arguments ("buf1" "buf2")) nil [30485 30904])
            ("moccur-buffer-string<" function (:arguments ("buf1" "buf2")) nil [30906 31071])
            ("moccur-buffer-string>" function (:arguments ("buf1" "buf2")) nil [31073 31238])
            ("moccur-buffer-in-list-p" function (:arguments ("buffer-name" "buffer-name-regexps")) nil [31240 31583])
            ("moccur-filter-buffers" function (:arguments ("buffer-list")) nil [31585 32215])
            ("moccur-kill-buffer-func" function nil nil [32217 32744])
            ("moccur-kill-buffer" function (:arguments ("arg")) nil [32746 32943])
            ("moccur-bury-buffer" function nil nil [32945 33222])
            ("ee-outline" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [33224 33267])
            ("moccur-setup" function nil nil [33268 33687])
            ("moccur-insert-heading" function (:arguments ("moccur-regexp-input")) nil [33689 34215])
            ("moccur-file-size<" function (:arguments ("filename" "maxsize")) nil [34217 34389])
            ("moccur-remove-overlays-on-all-buffers" function
               (:user-visible-flag t
                :arguments ("beg" "end" "length"))
                nil [34414 35660])
            ("moccur-buffer-hide-region" function (:arguments ("start" "end")) nil [35662 35878])
            ("moccur-buffer-color" function nil nil [35880 38302])
            ("moccur-color-view" function nil nil [38304 39845])
            ("moccur-color-current-line" function nil nil [39847 40302])
            ("moccur-get-info" function nil nil [40330 42802])
            ("moccur-color-check-view" function nil nil [42804 43152])
            ("moccur-view-file" function nil nil [43154 43954])
            ("moccur-scroll-file" function (:arguments ("arg")) nil [43956 44388])
            ("moccur-internal-beginning-of-buffer" function (:arguments ("arg")) nil [44390 44871])
            ("dmoccur-default-word" variable nil nil [44889 44922])
            ("moccur-set-default-word" function nil nil [44923 45941])
            ("moccur-regexp-read-from-minibuf" function nil nil [45943 47090])
            ("moccur-search-line" function (:arguments ("regexp")) nil [47113 47976])
            ("make-variable-buffer-local" code nil nil [47978 48030])
            ("moccur-search-buffer" function (:arguments ("regexp" "currbuf" "name")) nil [48031 50524])
            ("moccur-searched-list" variable nil nil [50526 50559])
            ("moccur-search" function (:arguments ("regexp" "arg" "buffers")) nil [50560 53588])
            ("moccur-search-undo" function nil nil [53590 54111])
            ("moccur-search-update" function nil nil [54113 54507])
            ("moccur-split-string" function (:arguments ("string" "separators")) nil [54526 57201])
            ("moccur-word-split" function (:arguments ("regexp" "norestrict")) nil [57203 58644])
            ("moccur-set-regexp" function nil nil [58646 59286])
            ("moccur-set-regexp-for-color" function nil nil [59288 59917])
            ("moccur-special-word-call-initialize-function" function nil nil [59966 60426])
            ("moccur-special-word-call-check-function" function nil nil [60428 61128])
            ("moccur-face-check" function (:arguments ("facename")) nil [61146 61460])
            ("make-variable-buffer-local" code nil nil [61462 61514])
            ("moccur-face-initialization" function nil nil [61515 61770])
            ("moccur-default-initial-function" function nil nil [61772 61819])
            ("moccur-default-check-function" function nil nil [61821 61865])
            ("moccur-comment-check" function nil nil [61867 61944])
            ("moccur-string-check" function nil nil [61946 62021])
            ("moccur-function-check" function nil nil [62023 62554])
            ("moccur-ee-start" function nil nil [62564 63243])
            ("moccur-switch-buffer" function (:arguments ("buf")) nil [63245 63586])
            ("moccur" function
               (:user-visible-flag t
                :arguments ("regexp" "arg"))
                nil [63605 64185])
            ("moccur-grep-correspond-ext-p" function (:arguments ("filename" "list")) nil [64187 64382])
            ("moccur-grep-xdoc2txt-p" function (:arguments ("filename")) nil [64400 64609])
            ("moccur-search-file-p" function (:arguments ("filename")) nil [64611 65015])
            ("moccur-search-files-init" function (:arguments ("regexp" "files")) nil [65017 65359])
            ("moccur-files-insert-xdoc2txt-file" function (:arguments ("filename")) nil [65361 66388])
            ("moccur-search-all-files" function (:arguments ("files")) nil [66390 67724])
            ("moccur-search-files" function (:arguments ("regexp" "files")) nil [67726 68887])
            ("moccur-grep-binary-file-view" function (:arguments ("file")) nil [68889 70684])
            ("moccur-grep-sync-kill-buffers" function nil nil [70686 71090])
            ("add-hook" code nil nil [71092 71249])
            ("moccur-grep-goto" function nil nil [71251 72333])
            ("moccur-grep-read-directory" function nil nil [72335 72971])
            ("moccur-grep-read-regexp" function (:arguments ("mask")) nil [72973 73515])
            ("moccur-grep" function (:arguments ("dir" "inputs")) nil [73517 74339])
            ("moccur-grep-find-subdir" function (:arguments ("dir" "mask")) nil [74341 75066])
            ("moccur-grep-find" function (:arguments ("dir" "inputs")) nil [75083 76261])
            ("dmoccur-in-list-p" function (:arguments ("dir-name" "dir-name-regexps")) nil [76288 76541])
            ("moccur-add-files-to-search-list" function (:arguments ("files" "dir" "norest" "recursive")) nil [76543 78965])
            ("moccur-add-directory-to-search-list" function (:arguments ("dir")) nil [78967 80129])
            ("dmoccur-read-directory-from-minibuf" function (:arguments ("default")) nil [80147 80895])
            ("dmoccur-read-project-name-from-minibuf" function (:arguments ("arg")) nil [80897 81964])
            ("dmoccur-set-sub-directory" function (:arguments ("name" "dir")) nil [81966 82930])
            ("dmoccur-set-project" function (:arguments ("arg")) nil [82932 85642])
            ("dmoccur-read-from-minibuf" function (:arguments ("arg")) nil [85644 85945])
            ("dmoccur" function
               (:user-visible-flag t
                :arguments ("dir" "regexp" "arg"))
                nil [85964 88520])
            ("clean-dmoccur-buffers" function nil nil [88522 89302])
            ("dired-do-moccur-by-moccur" function (:arguments ("regexp" "arg")) nil [89331 90190])
            ("dired-do-moccur-by-mgrep" function (:arguments ("regexp" "arg")) nil [90192 90725])
            ("dired-do-moccur" function
               (:user-visible-flag t
                :arguments ("regexp" "arg"))
                nil [90742 91273])
            ("moccur-quit" function (:arguments ("before" "moccur-quit-kill-buffers" "activate")) nil [91309 92683])
            ("Buffer-menu-moccur" function (:arguments ("regexp" "arg")) nil [92709 93198])
            ("unless" code nil nil [93200 93323])
            ("ibuffer-do-occur" function (:arguments ("around" "ibuffer-menu-moccur" "activate")) nil [93324 93838])
            ("moccur-mode-map" variable nil nil [93869 93896])
            ("moccur-set-key" function nil nil [93897 95970])
            ("if" code nil nil [95972 96087])
            ("moccur-ee-mode-map" variable nil nil [96089 96119])
            ("moccur-set-key-ee" function nil nil [96120 98734])
            ("if" code nil nil [98736 98863])
            ("moccur-outline-level" function nil nil [98878 99008])
            ("moccur-narrow-down-get-targets" function (:arguments ("target-regexp" "target-type")) nil [99034 99701])
            ("moccur-narrow-down-get-buffers" function nil nil [99703 99815])
            ("moccur-narrow-down-get-files" function nil nil [99817 99930])
            ("moccur-narrow-down" function
               (:user-visible-flag t
                :arguments ("regexp" "arg"))
                nil [99947 100710])
            ("moccur-mode-goto-occurrence" function (:user-visible-flag t) nil [100712 102652])
            ("moccur-toggle-buffer" function nil nil [102654 103656])
            ("moccur-mouse-select1" function (:arguments ("e")) nil [103658 103795])
            ("moccur-mouse-goto-occurrence" function (:arguments ("e")) nil [103797 103956])
            ("moccur-next" function (:arguments ("arg")) nil [103958 105024])
            ("moccur-prev" function (:arguments ("arg")) nil [105026 106167])
            ("moccur-file-scroll-up" function nil nil [106169 106394])
            ("moccur-file-scroll-down" function nil nil [106396 106621])
            ("moccur-file-beginning-of-buffer" function nil nil [106623 106875])
            ("moccur-file-end-of-buffer" function nil nil [106877 107121])
            ("moccur-scroll-up" function nil nil [107123 107306])
            ("moccur-scroll-down" function nil nil [107308 107499])
            ("moccur-next-file" function nil nil [107501 107665])
            ("moccur-prev-file" function nil nil [107667 107892])
            ("moccur-mode-kill-file-internal" function nil nil [107894 108298])
            ("moccur-mode-kill-line-internal" function nil nil [108300 108518])
            ("moccur-mode-start-ee-switch-before-buffer" function (:arguments ("ee" "line")) nil [108520 108797])
            ("moccur-mode-kill-ee" function nil nil [108799 109016])
            ("moccur-kill-line" function nil nil [109018 110286])
            ("moccur-mode-kill-file" function nil nil [110288 111307])
            ("moccur-mode-undo" function nil nil [111309 112315])
            ("moccur-flush-lines" function nil nil [112317 115056])
            ("moccur-keep-lines" function nil nil [115058 118097])
            ("moccur-quit" function nil nil [118099 118984])
            ("moccur-toggle-view" function nil nil [118986 119096])
            ("moccur-mode" function (:arguments ("ee")) nil [119108 120082])
            ("moccur-grep-mode" function nil nil [120084 121108])
            ("grep-buffers" function (:user-visible-flag t) nil [121163 121860])
            ("search-buffers-face" variable
               (:default-value (quote ((((class color) (background dark)) (:background "SkyBlue" :bold t :foreground "Black")) (((class color) (background light)) (:background "ForestGreen" :bold t)) (t nil)))
                :type "face")
                nil [121901 122174])
            ("search-buffers-header-face" variable
               (:default-value (quote ((((class color) (background dark)) (:background "gray20" :bold t :foreground "azure3")) (((class color) (background light)) (:background "ForestGreen" :bold t)) (t nil)))
                :type "face")
                nil [122176 122456])
            ("search-buffers-regexp-read-from-minibuf" function nil nil [122479 123069])
            ("search-buffers-current-buffer" variable nil nil [123081 123123])
            ("search-buffers-windows-conf" variable nil nil [123124 123164])
            ("search-buffers-regexp-list" variable nil nil [123165 123204])
            ("search-buffers-regexp" variable nil nil [123205 123239])
            ("search-buffers-regexp-for-moccur" variable nil nil [123240 123285])
            ("search-buffers" function
               (:user-visible-flag t
                :arguments ("regexp" "arg"))
                nil [123302 126544])
            ("search-buffers-view-mode" variable (:user-visible-flag t) nil [126556 126644])
            ("make-variable-buffer-local" code nil nil [126645 126699])
            ("search-buffers-view-mode-map" variable nil nil [126700 126744])
            ("setq" code nil nil [126746 126785])
            ("or" code nil nil [126787 127633])
            ("when" code nil nil [127635 127915])
            ("search-buffers-view-mode" function (:arguments ("arg")) nil [127917 128129])
            ("search-buffers-exit" function nil nil [128153 128347])
            ("search-buffers-set-regexp-for-moccur" function nil nil [128349 129097])
            ("search-buffers-call-moccur" function nil nil [129099 129924])
            ("search-buffers-goto" function nil nil [129926 130509])
            ("search-buffers-next" function nil nil [130511 130941])
            ("search-buffers-prev" function nil nil [130943 131365])
            ("search-buffers-scroll-up" function nil nil [131367 131803])
            ("search-buffers-scroll-down" function nil nil [131805 132252])
            ("search-buffers-color" function (:arguments ("regexp-lst")) nil [132264 133060])
            ("color-moccur" package nil nil [133062 133085]))          
      :file "color-moccur.el"
      :pointmax 133124
      :fsize 133123
      :lastmodtime '(23221 9008 873864 330000)
      :unmatched-syntax '((close-paren 16607 . 16608) (symbol 16576 . 16593) (open-paren 16575 . 16576))))
  :file "!home!c0urage!.emacs.d!elpa!color-moccur-20141222.1635!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
