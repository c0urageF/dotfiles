;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("add-to-list" code nil nil [1 39])
            ("add-to-list" code nil nil [40 73])
            ("add-to-list" code nil nil [158 208])
            ("add-to-list" code nil nil [209 259])
            ("add-to-list" code nil nil [260 302])
            ("package" include nil nil [304 322])
            ("add-to-list" code nil nil [323 406])
            ("add-to-list" code nil nil [407 497])
            ("add-to-list" code nil nil [498 586])
            ("add-to-list" code nil nil [587 658])
            ("fset" code nil nil [659 710])
            ("package-initialize" code nil nil [711 731])
            ("thingatpt" include nil nil [766 786])
            ("load" code nil nil [803 815])
            ("setq" code nil nil [933 965])
            ("setq" code nil nil [987 1014])
            ("setq" code nil nil [1028 1061])
            ("setq" code nil nil [1078 1108])
            ("global-hl-line-mode" code nil nil [1109 1130])
            ("setq-default" code nil nil [1143 1169])
            ("size-indication-mode" code nil nil [1184 1208])
            ("setq" code nil nil [1227 1257])
            ("setq" code nil nil [1278 1306])
            ("setq" code nil nil [1327 1355])
            ("set-face-background" code nil nil [1356 1401])
            ("custom-set-variables" code nil nil [1459 3047])
            ("custom-set-faces" code nil nil [3048 3287])
            ("setq" code nil nil [3301 3538])
            ("bat-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3540 3607])
            ("setq" code nil nil [3622 3684])
            ("if" code nil nil [3712 3918])
            ("setq" code nil nil [3948 3973])
            ("add-to-list" code nil nil [3984 4039])
            ("set-face-attribute" code nil nil [4053 4098])
            ("global-hl-line-mode" code nil nil [4113 4136])
            ("set-face-background" code nil nil [4143 4190])
            ("savehist-mode" code nil nil [4215 4232])
            ("setq-default" code nil nil [4256 4283])
            ("saveplace" include nil nil [4284 4304])
            ("show-paren-mode" code nil nil [4322 4341])
            ("global-set-key" code nil nil [4370 4420])
            ("display-time" code nil nil [4440 4454])
            ("line-number-mode" code nil nil [4472 4492])
            ("column-number-mode" code nil nil [4493 4515])
            ("linum" include nil nil [4516 4532])
            ("global-linum-mode" code nil nil [4533 4552])
            ("transient-mark-mode" code nil nil [4569 4592])
            ("set-face-background" code nil nil [4593 4636])
            ("setq" code nil nil [4664 4713])
            ("setq" code nil nil [4730 4758])
            ("setq" code nil nil [4784 4821])
            ("setq" code nil nil [4847 4872])
            ("defalias" code nil nil [4873 4905])
            ("setq" code nil nil [4922 4948])
            ("setq" code nil nil [4975 5001])
            ("setq" code nil nil [5051 5103])
            ("abort-recursive-edit" function (:arguments ("before" "minibuffer-save" "activate")) nil [5155 5351])
            ("defalias" code nil nil [5364 5397])
            ("tool-bar-mode" code nil nil [5419 5437])
            ("scroll-bar-mode" code nil nil [5438 5458])
            ("delete-selection-mode" code nil nil [5475 5500])
            ("ffap-bindings" code nil nil [5625 5640])
            ("uniquify" include nil nil [5655 5674])
            ("setq" code nil nil [5704 5766])
            ("setq" code nil nil [5790 5832])
            ("iswitchb-mode" code nil nil [5847 5864])
            ("setq" code nil nil [5895 5944])
            ("setq" code nil nil [5978 6004])
            ("setq" code nil nil [6035 6071])
            ("anzu" include nil nil [6150 6165])
            ("global-anzu-mode" code nil nil [6166 6187])
            ("auto-save-buffers" include nil nil [6558 6586])
            ("run-with-idle-timer" code nil nil [6587 6631])
            ("add-to-list" code nil nil [6774 6858])
            ("yasnippet" include nil nil [6921 6941])
            ("setq" code nil nil [6942 7038])
            ("yas-global-mode" code nil nil [7049 7068])
            ("define-key" code nil nil [7086 7153])
            ("define-key" code nil nil [7179 7243])
            ("define-key" code nil nil [7263 7334])
            ("when" code nil nil [7443 7591])
            ("when" code nil nil [7696 7771])
            ("redo+" include nil nil [7871 7887])
            ("global-set-key" code nil nil [7888 7924])
            ("setq" code nil nil [7925 7946])
            ("setq" code nil nil [7992 8016])
            ("setq" code nil nil [8017 8048])
            ("when" code nil nil [8147 8206])
            ("when" code nil nil [8208 8264])
            ("when" code nil nil [8369 8508])
            ("color-moccur" include nil nil [8608 8631])
            ("setq" code nil nil [8632 8658])
            ("moccur-edit" include nil nil [8685 8707])
            ("setq" code nil nil [8733 8759])
            ("igrep" include nil nil [8857 8873])
            ("igrep-define" code nil nil [8909 8981])
            ("igrep-find-define" code nil nil [8982 9059])
            ("grep-a-lot" include nil nil [9061 9082])
            ("grep-a-lot-setup-keys" code nil nil [9083 9106])
            ("grep-a-lot-advise" code nil nil [9122 9147])
            ("setq" code nil nil [9269 9307])
            ("elscreen-start" code nil nil [9308 9324])
            ("setq" code nil nil [9345 9388])
            ("setq" code nil nil [9420 9459])
            ("setq" code nil nil [9501 9992])
            ("setq" code nil nil [9993 10202])
            ("paredit" include nil nil [10308 10326])
            ("add-hook" code nil nil [10327 10380])
            ("add-hook" code nil nil [10381 10440])
            ("add-hook" code nil nil [10441 10488])
            ("add-hook" code nil nil [10489 10536])
            ("find-function-setup-keys" code nil nil [10538 10564])
            ("edit-list" include nil nil [10566 10586])
            ("hideif" include nil nil [10588 10605])
            ("add-hook" code nil nil [10606 10653])
            ("add-hook" code nil nil [10918 10977])
            ("add-to-list" code nil nil [11122 11171])
            ("gtags-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11172 11207])
            ("setq" code nil nil [11208 11506])
            ("add-hook" code nil nil [11508 11543])
            ("add-hook" code nil nil [11544 11581])
            ("when" code nil nil [11683 12089])
            ("put" code nil nil [12504 12538])
            ("helm" include nil nil [12639 12654])
            ("helm-config" include nil nil [12655 12677])
            ("helm-mode" code nil nil [12678 12691])
            ("define-key" code nil nil [12707 12762])
            ("define-key" code nil nil [12763 12829])
            ("define-key" code nil nil [12902 12955])
            ("define-key" code nil nil [12956 13014])
            ("define-key" code nil nil [13015 13071])
            ("define-key" code nil nil [13072 13121])
            ("define-key" code nil nil [13122 13182])
            ("define-key" code nil nil [13183 13259])
            ("define-key" code nil nil [13260 13335])
            ("setq" code nil nil [13379 13430])
            ("helm-delete-minibuffer-contents" function (:arguments ("before" "helm-emulate-kill-line" "activate")) nil [13431 13610])
            ("helm-ff-kill-or-find-buffer-fname" function (:arguments ("around" "execute-only-if-exist" "activate")) nil [13612 13790])
            ("helm-gtags" include nil nil [13792 13813])
            ("add-hook" code nil nil [13817 14651])
            ("when" code nil nil [14653 15220])
            ("when" code nil nil [15222 15560])
            ("global-set-key" code nil nil [15664 15701])
            ("setq" code nil nil [15722 15752])
            ("setq" code nil nil [15791 15825])
            ("setq" code nil nil [15871 15896])
            ("setq" code nil nil [15916 15948])
            ("autoinsert" include nil nil [16112 16133])
            ("setq" code nil nil [16134 16160])
            ("setq" code nil nil [16161 16194])
            ("setq" code nil nil [16195 16234])
            ("setq" code nil nil [16253 16302])
            ("setq" code nil nil [16329 16681])
            ("cl" include nil nil [16683 16696])
            ("template-replacements-alists" variable (:default-value (quote (("%file%" lambda nil (file-name-nondirectory (buffer-file-name))) ("%file-without-ext%" lambda nil (file-name-sans-extension (file-name-nondirectory (buffer-file-name)))) ("%date%" lambda nil (format-time-string "%Y-%m-%d %H:%M:%S")) ("%mail%" lambda nil (identity user-mail-address)) ("%name%" lambda nil (identity user-full-name)) ("%id%" lambda nil (identity user-id-string))))) nil [16697 17154])
            ("my-template" function nil nil [17156 17385])
            ("add-hook" code nil nil [17386 17436])
            ("when" code nil nil [17540 18386])
            ("company-mode/enable-yas" variable (:default-value t) nil [18405 18478])
            ("company-mode/backend-with-yas" function (:arguments ("backend")) nil [18479 18736])
            ("setq" code nil nil [18737 18818])
            ("irony" include nil nil [18920 18936])
            ("add-hook" code nil nil [18937 18972])
            ("add-hook" code nil nil [18973 19010])
            ("add-hook" code nil nil [19011 19049])
            ("add-hook" code nil nil [19050 19114])
            ("add-to-list" code nil nil [19115 19161])
            ("setq" code nil nil [19228 19392])
            ("ad-irony--lang-compile-option" function nil nil [19473 19686])
            ("advice-add" code nil nil [19687 19769])
            ("irony--lang-compile-option" function (:arguments ("around" "ad-irony--lang-compile-option" "activate")) nil [19791 20050])
            ("when" code nil nil [20155 20653])
            ("eval-after-load" code nil nil [20655 20770])
            ("when" code nil nil [20869 21275])
            ("semantic-mode" code nil nil [21379 21396])
            ("global-semantic-idle-scheduler-mode" code nil nil [21397 21436])
            ("global-semanticdb-minor-mode" code nil nil [21437 21469])
            ("global-semantic-idle-completions-mode" code nil nil [21470 21511])
            ("global-semantic-decoration-mode" code nil nil [21512 21547])
            ("global-semantic-stickyfunc-mode" code nil nil [21548 21583])
            ("global-semantic-mru-bookmark-mode" code nil nil [21584 21621])
            ("srefactor" include nil nil [21726 21746])
            ("srefactor-lisp" include nil nil [21747 21772])
            ("define-key" code nil nil [21773 21839])
            ("define-key" code nil nil [21840 21908])
            ("python-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22010 22064])
            ("add-to-list" code nil nil [22065 22123])
            ("add-to-list" code nil nil [22124 22187])
            ("add-hook" code nil nil [22190 22288])
            ("add-hook" code nil nil [22290 22701])
            ("electric-pair" function (:user-visible-flag t) nil [22702 22843])
            ("jedi-core" include nil nil [22845 22865])
            ("setq" code nil nil [22866 22895])
            ("setq" code nil nil [22896 22923])
            ("add-hook" code nil nil [22924 22964])
            ("add-to-list" code nil nil [22965 23010])
            ("py-autopep8" include nil nil [23025 23047])
            ("setq" code nil nil [23048 23101])
            ("setq" code nil nil [23102 23148])
            ("py-autopep8-enable-on-save" code nil nil [23149 23177])
            ("flymake-mode" code nil nil [23179 23195])
            ("flymake-python-pyflakes" include nil nil [23217 23251])
            ("flymake-python-pyflakes-load" code nil nil [23252 23282])
            ("when" code nil nil [23382 23468])
            ("when" code nil nil [23470 23555])
            ("when" code nil nil [23557 23594])
            ("when" code nil nil [23596 24142])
            ("when" code nil nil [24144 25000])
            ("haskell-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25002 25047])
            ("haskell-cabal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25048 25095])
            ("add-to-list" code nil nil [25097 25154])
            ("add-to-list" code nil nil [25155 25222])
            ("add-to-list" code nil nil [25223 25289])
            ("ghc-init" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25291 25323])
            ("ghc-debug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25324 25357])
            ("add-hook" code nil nil [25359 25409])
            ("global-company-mode" code nil nil [25411 25434])
            ("add-to-list" code nil nil [25458 25502])
            ("my-haskell-mode-hook" function nil nil [25504 25871])
            ("add-hook" code nil nil [25872 25923])
            ("add-to-list" code nil nil [25955 26014])
            ("eval-after-load" code nil nil [26068 26137])
            ("add-hook" code nil nil [26179 26308])
            ("add-hook" code nil nil [26332 26372])
            ("add-hook" code nil nil [26393 26706]))          
      :file "init.el"
      :pointmax 26709
      :fsize 29898
      :lastmodtime '(23227 19356 832918 32000)
      :unmatched-syntax nil))
  :file "!home!pfpro!tmp!dotfiles!.emacs.d!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
