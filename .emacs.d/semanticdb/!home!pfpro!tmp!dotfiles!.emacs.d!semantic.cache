;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("add-to-list" code nil nil [1 39])
            ("add-to-list" code nil nil [40 73])
            ("add-to-list" code nil nil [158 208])
            ("add-to-list" code nil nil [209 259])
            ("add-to-list" code nil nil [260 302])
            ("package" include nil nil [304 322])
            ("add-to-list" code nil nil [323 406])
            ("add-to-list" code nil nil [407 497])
            ("add-to-list" code nil nil [498 586])
            ("add-to-list" code nil nil [587 658])
            ("fset" code nil nil [659 710])
            ("package-initialize" code nil nil [711 731])
            ("thingatpt" include nil nil [766 786])
            ("load" code nil nil [803 815])
            ("setq" code nil nil [933 965])
            ("setq" code nil nil [987 1014])
            ("setq" code nil nil [1028 1061])
            ("setq" code nil nil [1078 1108])
            ("global-hl-line-mode" code nil nil [1109 1130])
            ("setq-default" code nil nil [1143 1169])
            ("size-indication-mode" code nil nil [1184 1208])
            ("setq" code nil nil [1227 1257])
            ("setq" code nil nil [1278 1306])
            ("setq" code nil nil [1327 1355])
            ("set-face-background" code nil nil [1356 1401])
            ("custom-set-variables" code nil nil [1459 1544])
            ("custom-set-faces" code nil nil [1545 1563])
            ("setq" code nil nil [1577 1814])
            ("bat-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1816 1883])
            ("setq" code nil nil [1898 1960])
            ("if" code nil nil [1988 2194])
            ("setq" code nil nil [2224 2249])
            ("add-to-list" code nil nil [2260 2315])
            ("set-face-attribute" code nil nil [2329 2374])
            ("global-hl-line-mode" code nil nil [2389 2412])
            ("set-face-background" code nil nil [2419 2466])
            ("savehist-mode" code nil nil [2491 2508])
            ("setq-default" code nil nil [2532 2559])
            ("saveplace" include nil nil [2560 2580])
            ("show-paren-mode" code nil nil [2598 2617])
            ("global-set-key" code nil nil [2646 2696])
            ("display-time" code nil nil [2716 2730])
            ("line-number-mode" code nil nil [2748 2768])
            ("column-number-mode" code nil nil [2769 2791])
            ("linum" include nil nil [2792 2808])
            ("global-linum-mode" code nil nil [2809 2828])
            ("transient-mark-mode" code nil nil [2845 2868])
            ("set-face-background" code nil nil [2869 2912])
            ("setq" code nil nil [2940 2989])
            ("setq" code nil nil [3006 3034])
            ("setq" code nil nil [3060 3097])
            ("setq" code nil nil [3123 3148])
            ("defalias" code nil nil [3149 3181])
            ("setq" code nil nil [3198 3224])
            ("setq" code nil nil [3251 3277])
            ("setq" code nil nil [3327 3379])
            ("abort-recursive-edit" function (:arguments ("before" "minibuffer-save" "activate")) nil [3431 3627])
            ("defalias" code nil nil [3640 3673])
            ("tool-bar-mode" code nil nil [3695 3713])
            ("scroll-bar-mode" code nil nil [3714 3734])
            ("delete-selection-mode" code nil nil [3751 3776])
            ("ffap-bindings" code nil nil [3901 3916])
            ("uniquify" include nil nil [3931 3950])
            ("setq" code nil nil [3980 4042])
            ("setq" code nil nil [4066 4108])
            ("iswitchb-mode" code nil nil [4123 4140])
            ("setq" code nil nil [4171 4220])
            ("setq" code nil nil [4254 4280])
            ("setq" code nil nil [4311 4347])
            ("anzu" include nil nil [4426 4441])
            ("global-anzu-mode" code nil nil [4442 4463])
            ("auto-save-buffers" include nil nil [4834 4862])
            ("run-with-idle-timer" code nil nil [4863 4907])
            ("add-to-list" code nil nil [5050 5134])
            ("yasnippet" include nil nil [5197 5217])
            ("setq" code nil nil [5218 5314])
            ("yas-global-mode" code nil nil [5325 5344])
            ("define-key" code nil nil [5362 5429])
            ("define-key" code nil nil [5455 5519])
            ("define-key" code nil nil [5539 5610])
            ("when" code nil nil [5719 5867])
            ("when" code nil nil [5972 6047])
            ("redo+" include nil nil [6147 6163])
            ("global-set-key" code nil nil [6164 6200])
            ("setq" code nil nil [6201 6222])
            ("setq" code nil nil [6268 6292])
            ("setq" code nil nil [6293 6324])
            ("when" code nil nil [6423 6482])
            ("when" code nil nil [6484 6540])
            ("when" code nil nil [6645 6784])
            ("color-moccur" include nil nil [6884 6907])
            ("setq" code nil nil [6908 6934])
            ("moccur-edit" include nil nil [6961 6983])
            ("setq" code nil nil [7009 7035])
            ("igrep" include nil nil [7133 7149])
            ("igrep-define" code nil nil [7185 7257])
            ("igrep-find-define" code nil nil [7258 7335])
            ("grep-a-lot" include nil nil [7337 7358])
            ("grep-a-lot-setup-keys" code nil nil [7359 7382])
            ("grep-a-lot-advise" code nil nil [7398 7423])
            ("paredit" include nil nil [7530 7548])
            ("add-hook" code nil nil [7549 7602])
            ("add-hook" code nil nil [7603 7662])
            ("add-hook" code nil nil [7663 7710])
            ("add-hook" code nil nil [7711 7758])
            ("find-function-setup-keys" code nil nil [7760 7786])
            ("edit-list" include nil nil [7788 7808])
            ("hideif" include nil nil [7810 7827])
            ("add-hook" code nil nil [7828 7875])
            ("add-hook" code nil nil [8140 8199])
            ("add-to-list" code nil nil [8344 8393])
            ("gtags-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [8394 8429])
            ("setq" code nil nil [8430 8728])
            ("add-hook" code nil nil [8730 8765])
            ("add-hook" code nil nil [8766 8803])
            ("when" code nil nil [8905 9311])
            ("put" code nil nil [9726 9760])
            ("helm" include nil nil [9861 9876])
            ("helm-config" include nil nil [9877 9899])
            ("helm-mode" code nil nil [9900 9913])
            ("define-key" code nil nil [9929 9984])
            ("define-key" code nil nil [9985 10051])
            ("define-key" code nil nil [10124 10177])
            ("define-key" code nil nil [10178 10236])
            ("define-key" code nil nil [10237 10293])
            ("define-key" code nil nil [10294 10343])
            ("define-key" code nil nil [10344 10404])
            ("define-key" code nil nil [10405 10481])
            ("define-key" code nil nil [10482 10557])
            ("setq" code nil nil [10601 10652])
            ("helm-delete-minibuffer-contents" function (:arguments ("before" "helm-emulate-kill-line" "activate")) nil [10653 10832])
            ("helm-ff-kill-or-find-buffer-fname" function (:arguments ("around" "execute-only-if-exist" "activate")) nil [10834 11012])
            ("helm-gtags" include nil nil [11014 11035])
            ("custom-set-variables" code nil nil [11037 11154])
            ("add-hook" code nil nil [11156 11990])
            ("when" code nil nil [11992 12559])
            ("when" code nil nil [12561 12899])
            ("global-set-key" code nil nil [13003 13040])
            ("setq" code nil nil [13061 13091])
            ("setq" code nil nil [13130 13164])
            ("setq" code nil nil [13210 13235])
            ("setq" code nil nil [13255 13287])
            ("autoinsert" include nil nil [13451 13472])
            ("setq" code nil nil [13473 13499])
            ("setq" code nil nil [13500 13533])
            ("setq" code nil nil [13534 13573])
            ("setq" code nil nil [13592 13641])
            ("setq" code nil nil [13668 14020])
            ("cl" include nil nil [14022 14035])
            ("template-replacements-alists" variable (:default-value (quote (("%file%" lambda nil (file-name-nondirectory (buffer-file-name))) ("%file-without-ext%" lambda nil (file-name-sans-extension (file-name-nondirectory (buffer-file-name)))) ("%date%" lambda nil (format-time-string "%Y-%m-%d %H:%M:%S")) ("%mail%" lambda nil (identity user-mail-address)) ("%name%" lambda nil (identity user-full-name)) ("%id%" lambda nil (identity user-id-string))))) nil [14036 14493])
            ("my-template" function nil nil [14495 14724])
            ("add-hook" code nil nil [14725 14775])
            ("when" code nil nil [14879 15725])
            ("company-mode/enable-yas" variable (:default-value t) nil [15744 15817])
            ("company-mode/backend-with-yas" function (:arguments ("backend")) nil [15818 16075])
            ("setq" code nil nil [16076 16157])
            ("irony" include nil nil [16259 16275])
            ("add-hook" code nil nil [16276 16311])
            ("add-hook" code nil nil [16312 16349])
            ("add-hook" code nil nil [16350 16388])
            ("add-hook" code nil nil [16389 16453])
            ("add-to-list" code nil nil [16454 16500])
            ("setq" code nil nil [16567 16731])
            ("ad-irony--lang-compile-option" function nil nil [16812 17025])
            ("advice-add" code nil nil [17026 17108])
            ("irony--lang-compile-option" function (:arguments ("around" "ad-irony--lang-compile-option" "activate")) nil [17130 17389])
            ("when" code nil nil [17494 17992])
            ("eval-after-load" code nil nil [17994 18109])
            ("when" code nil nil [18208 18614])
            ("custom-set-variables" code nil nil [18616 18658])
            ("semantic-mode" code nil nil [18760 18777])
            ("global-semantic-idle-scheduler-mode" code nil nil [18778 18817])
            ("global-semanticdb-minor-mode" code nil nil [18818 18850])
            ("global-semantic-idle-completions-mode" code nil nil [18851 18892])
            ("global-semantic-decoration-mode" code nil nil [18893 18928])
            ("global-semantic-stickyfunc-mode" code nil nil [18929 18964])
            ("global-semantic-mru-bookmark-mode" code nil nil [18965 19002])
            ("srefactor" include nil nil [19107 19127])
            ("srefactor-lisp" include nil nil [19128 19153])
            ("define-key" code nil nil [19154 19220])
            ("define-key" code nil nil [19221 19289])
            ("python-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19391 19445])
            ("add-to-list" code nil nil [19446 19504])
            ("add-to-list" code nil nil [19505 19568])
            ("add-hook" code nil nil [19571 19669])
            ("add-hook" code nil nil [19671 20082])
            ("electric-pair" function (:user-visible-flag t) nil [20083 20224])
            ("jedi-core" include nil nil [20226 20246])
            ("setq" code nil nil [20247 20276])
            ("setq" code nil nil [20277 20304])
            ("add-hook" code nil nil [20305 20345])
            ("add-to-list" code nil nil [20346 20391])
            ("py-autopep8" include nil nil [20406 20428])
            ("setq" code nil nil [20429 20482])
            ("setq" code nil nil [20483 20529])
            ("py-autopep8-enable-on-save" code nil nil [20530 20558])
            ("flymake-mode" code nil nil [20560 20576])
            ("flymake-python-pyflakes" include nil nil [20598 20632])
            ("flymake-python-pyflakes-load" code nil nil [20633 20663])
            ("when" code nil nil [20763 20849])
            ("when" code nil nil [20851 20936])
            ("when" code nil nil [20938 20975])
            ("when" code nil nil [20977 21523])
            ("when" code nil nil [21525 22381])
            ("haskell-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22383 22428])
            ("haskell-cabal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22429 22476])
            ("add-to-list" code nil nil [22478 22535])
            ("add-to-list" code nil nil [22536 22603])
            ("add-to-list" code nil nil [22604 22670])
            ("ghc-init" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22672 22704])
            ("ghc-debug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22705 22738])
            ("add-hook" code nil nil [22740 22790])
            ("global-company-mode" code nil nil [22792 22815])
            ("add-to-list" code nil nil [22839 22883])
            ("my-haskell-mode-hook" function nil nil [22885 23252])
            ("add-hook" code nil nil [23253 23304])
            ("add-to-list" code nil nil [23336 23395])
            ("eval-after-load" code nil nil [23449 23518])
            ("add-hook" code nil nil [23560 23689])
            ("add-hook" code nil nil [23713 23753])
            ("add-hook" code nil nil [23774 24087]))          
      :file "init.el"
      :pointmax 24090
      :fsize 27149
      :lastmodtime '(23227 18716 476764 910000)
      :unmatched-syntax nil))
  :file "!home!pfpro!tmp!dotfiles!.emacs.d!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
