;; Object emacs-lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "emacs-lisp/"
  :tables
  (list
    (semanticdb-table "cl.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1047 1064])
            ("macroexp" include nil nil [1065 1084])
            ("gv" include nil nil [1085 1098])
            ("cl-unload-function" function nil nil [3594 3752])
            ("dolist" code nil nil [3789 4502])
            ("dolist" code nil nil [4504 9695])
            ("cl--wrap-in-nil-block" function (:arguments ("fun" "args")) nil [9697 9779])
            ("advice-add" code nil nil [9780 9832])
            ("advice-add" code nil nil [9833 9886])
            ("cl--pass-args-to-cl-declare" function (:arguments ("specs")) nil [9888 9976])
            ("advice-add" code nil nil [9977 10035])
            ("cl-closure-vars" variable nil nil [10195 10223])
            ("cl--function-convert-cache" variable nil nil [10224 10263])
            ("cl--function-convert" function (:arguments ("f")) nil [10265 12578])
            ("lexical-let" function (:arguments ("bindings" "body")) nil [12580 14610])
            ("lexical-let*" function (:arguments ("bindings" "body")) nil [14612 15142])
            ("flet" function (:arguments ("bindings" "body")) nil [15221 16975])
            ("labels" function (:arguments ("bindings" "body")) nil [16977 17921])
            ("cl--gv-adapt" function (:arguments ("cl-gv" "do")) nil [18117 19007])
            ("define-setf-expander" function (:arguments ("name" "arglist" "body")) nil [19009 19912])
            ("defsetf" function (:arguments ("name" "arg1" "args")) nil [19914 21529])
            ("make-obsolete" code nil nil [23443 23495])
            ("define-modify-macro" function (:arguments ("name" "arglist" "func" "doc")) nil [23497 24256])
            ("define-obsolete-function-alias" code nil nil [24358 24426])
            ("define-obsolete-variable-alias" code nil nil [24427 24519])
            ("define-obsolete-function-alias" code nil nil [24520 24596])
            ("cl-not-hash-table" function (:arguments ("x" "y" "_z")) nil [24734 24883])
            ("cl-builtin-gethash" variable (:default-value (symbol-function (quote gethash))) nil [24885 24939])
            ("make-obsolete-variable" code nil nil [24940 24995])
            ("cl-builtin-remhash" variable (:default-value (symbol-function (quote remhash))) nil [24996 25050])
            ("make-obsolete-variable" code nil nil [25051 25106])
            ("cl-builtin-clrhash" variable (:default-value (symbol-function (quote clrhash))) nil [25107 25161])
            ("make-obsolete-variable" code nil nil [25162 25217])
            ("cl-builtin-maphash" variable (:default-value (symbol-function (quote maphash))) nil [25218 25272])
            ("make-obsolete-variable" code nil nil [25274 25329])
            ("define-obsolete-function-alias" code nil nil [25330 25396])
            ("define-obsolete-function-alias" code nil nil [25397 25461])
            ("define-obsolete-function-alias" code nil nil [25462 25522])
            ("define-obsolete-function-alias" code nil nil [25523 25583])
            ("define-obsolete-function-alias" code nil nil [25584 25644])
            ("define-obsolete-function-alias" code nil nil [25645 25705])
            ("define-obsolete-function-alias" code nil nil [25706 25766])
            ("define-obsolete-function-alias" code nil nil [25767 25843])
            ("define-obsolete-function-alias" code nil nil [25844 25914])
            ("define-obsolete-function-alias" code nil nil [25915 25993])
            ("define-obsolete-function-alias" code nil nil [25995 26091])
            ("define-obsolete-function-alias" code nil nil [26092 26168])
            ("define-obsolete-function-alias" code nil nil [26169 26242])
            ("define-obsolete-function-alias" code nil nil [26243 26309])
            ("cl-maclisp-member" function (:arguments ("item" "list")) nil [26311 26466])
            ("cl-struct-setf-expander" function (:arguments ("x" "name" "accessor" "pred-form" "pos")) nil [26517 27451])
            ("cl" package nil nil [27453 27466])
            ("run-hooks" code nil nil [27468 27493]))          
      :file "cl.el.gz"
      :pointmax 27515
      :fsize 7986
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "gv.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("macroexp" include nil nil [3158 3177])
            ("gv-get" function (:arguments ("place" "do")) nil [3434 5143])
            ("gv-letplace" function (:arguments ("vars" "place" "body")) nil [5160 5811])
            ("gv-define-expander" function (:arguments ("name" "handler")) nil [5881 6571])
            ("gv--defun-declaration" function (:arguments ("symbol" "name" "args" "handler" "fix")) nil [6588 7420])
            ("or" code nil nil [7437 7596])
            ("or" code nil nil [7612 7765])
            ("gv--defsetter" function (:arguments ("name" "setter" "do" "args" "vars")) nil [8286 8969])
            ("gv-define-setter" function (:arguments ("name" "arglist" "body")) nil [8986 9818])
            ("gv-define-simple-setter" function (:arguments ("name" "setter" "fix-return")) nil [9835 10800])
            ("setf" function (:arguments ("args")) nil [10867 11561])
            ("put" code nil nil [12783 12835])
            ("put" code nil nil [12941 13140])
            ("gv-define-simple-setter" code nil nil [13181 13216])
            ("gv-define-simple-setter" code nil nil [13217 13253])
            ("gv-define-simple-setter" code nil nil [13254 13290])
            ("gv-define-setter" code nil nil [13341 13396])
            ("gv-define-setter" code nil nil [13397 13452])
            ("gv-define-setter" code nil nil [13453 13508])
            ("gv-define-setter" code nil nil [13509 13564])
            ("gv-define-setter" code nil nil [13565 13682])
            ("gv-define-simple-setter" code nil nil [13683 13716])
            ("gv-define-setter" code nil nil [13717 13788])
            ("put" code nil nil [13863 14025])
            ("gv-define-simple-setter" code nil nil [14026 14072])
            ("gv-define-simple-setter" code nil nil [14073 14120])
            ("gv-define-simple-setter" code nil nil [14121 14163])
            ("put" code nil nil [14165 14483])
            ("gv-define-simple-setter" code nil nil [14528 14579])
            ("gv-define-simple-setter" code nil nil [14580 14646])
            ("gv-define-simple-setter" code nil nil [14647 14714])
            ("gv-define-simple-setter" code nil nil [14715 14772])
            ("gv-define-simple-setter" code nil nil [14773 14829])
            ("gv-define-simple-setter" code nil nil [14830 14879])
            ("gv-define-setter" code nil nil [14880 14985])
            ("gv-define-setter" code nil nil [14986 15091])
            ("gv-define-simple-setter" code nil nil [15092 15151])
            ("gv-define-simple-setter" code nil nil [15152 15211])
            ("gv-define-simple-setter" code nil nil [15212 15275])
            ("gv-define-simple-setter" code nil nil [15276 15325])
            ("gv-define-simple-setter" code nil nil [15326 15389])
            ("gv-define-setter" code nil nil [15390 15506])
            ("gv-define-setter" code nil nil [15507 15637])
            ("gv-define-setter" code nil nil [15638 15725])
            ("gv-define-setter" code nil nil [15726 15803])
            ("gv-define-setter" code nil nil [15804 15877])
            ("gv-define-setter" code nil nil [15878 15951])
            ("gv-define-setter" code nil nil [15953 16100])
            ("put" code nil nil [16331 16549])
            ("let" code nil nil [16551 16883])
            ("put" code nil nil [16885 17926])
            ("put" code nil nil [17928 19606])
            ("put" code nil nil [19645 20006])
            ("put" code nil nil [20008 20455])
            ("gv-ref" function (:arguments ("place")) nil [20488 20887])
            ("gv-deref" function (:arguments ("ref")) nil [20889 21092])
            ("gv-define-setter" code nil nil [21336 21396])
            ("gv" package nil nil [22024 22037]))          
      :file "gv.el.gz"
      :pointmax 22058
      :fsize 6692
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "byte-run.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("macro-declaration-function" variable (:default-value (function macro-declaration-function)) nil [1239 1571])
            ("defalias" code nil nil [1573 2715])
            ("defun-declarations-alist" variable (:default-value (list (list (quote advertised-calling-convention) (function (lambda (f _args arglist when) (list (quote set-advertised-calling-convention) (list (quote quote) f) (list (quote quote) arglist) (list (quote quote) when))))) (list (quote obsolete) (function (lambda (f _args new-name when) (list (quote make-obsolete) (list (quote quote) f) (list (quote quote) new-name) (list (quote quote) when))))) (list (quote compiler-macro) (function (lambda (f args compiler-function) (\` (eval-and-compile (put (quote (\, f)) (quote compiler-macro) (\, (if (eq (car-safe compiler-function) (quote lambda)) (\` (lambda (\, (append (cadr compiler-function) args)) (\,@ (cddr compiler-function)))) (\` (function (\, compiler-function))))))))))) (list (quote doc-string) (function (lambda (f _args pos) (list (quote put) (list (quote quote) f) (quote (quote doc-string-elt)) (list (quote quote) pos))))) (list (quote indent) (function (lambda (f _args val) (list (quote put) (list (quote quote) f) (quote (quote lisp-indent-function)) (list (quote quote) val))))))) nil [2912 4524])
            ("macro-declarations-alist" variable (:default-value (cons (list (quote debug) (function (lambda (name _args spec) (list (quote progn) :autoload-end (list (quote put) (list (quote quote) name) (quote (quote edebug-form-spec)) (list (quote quote) spec)))))) defun-declarations-alist)) nil [4526 5153])
            ("put" code nil nil [5155 5188])
            ("put" code nil nil [5189 5228])
            ("defalias" code nil nil [5229 6948])
            ("defun" function (:arguments ("name" "arglist" "docstring" "body")) nil [6997 9374])
            ("fset" code nil nil [9480 9501])
            ("defsubst" function (:arguments ("name" "arglist" "body")) nil [10512 10983])
            ("advertised-signature-table" variable (:default-value (make-hash-table :test (quote eq) :weakness (quote key))) nil [10985 11063])
            ("set-advertised-calling-convention" function (:arguments ("function" "signature" "_when")) nil [11065 11435])
            ("make-obsolete" function (:arguments ("obsolete-name" "current-name" "when")) nil [11437 12330])
            ("define-obsolete-function-alias" function (:arguments ("obsolete-name" "current-name" "when" "docstring")) nil [12332 13149])
            ("make-obsolete-variable" function (:arguments ("obsolete-name" "current-name" "when" "access-type")) nil [13151 13982])
            ("define-obsolete-variable-alias" function (:arguments ("obsolete-name" "current-name" "when" "docstring")) nil [13985 15680])
            ("define-obsolete-face-alias" function (:arguments ("obsolete-face" "current-face" "when")) nil [16010 16396])
            ("dont-compile" function (:arguments ("body")) nil [16398 16707])
            ("eval-when-compile" function (:arguments ("body")) nil [16950 17311])
            ("eval-and-compile" function (:arguments ("body")) nil [17313 17691])
            ("with-no-warnings" function (:arguments ("body")) nil [17693 17901])
            ("make-obsolete-variable" code nil nil [19196 19305])
            ("make-obsolete" code nil nil [19306 19397]))          
      :file "byte-run.el.gz"
      :pointmax 19425
      :fsize 5834
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "eieio.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1791 1804])
            ("eieio-version" variable (:default-value "1.4") nil [1833 1891])
            ("eieio-version" function (:user-visible-flag t) nil [1893 2001])
            ("eieio-core" include nil nil [2003 2024])
            ("defclass" function (:arguments ("name" "superclass" "slots" "options-and-doc")) nil [2056 5165])
            ("make-instance" function (:arguments ("class" "initargs")) nil [5221 6090])
            ("defgeneric" function (:arguments ("method" "args" "doc-string")) nil [6127 6688])
            ("defmethod" function (:arguments ("method" "args")) nil [6690 8335])
            ("oref" function (:arguments ("obj" "slot")) nil [8372 8595])
            ("defalias" code nil nil [8597 8631])
            ("defalias" code nil nil [8632 8670])
            ("oref-default" function (:arguments ("obj" "slot")) nil [8672 8977])
            ("with-slots" function (:arguments ("spec-list" "object" "body")) nil [9004 10109])
            ("define-obsolete-function-alias" code nil nil [10217 10299])
            ("eieio-object-name" function (:arguments ("obj" "extra")) nil [10301 10619])
            ("define-obsolete-function-alias" code nil nil [10620 10692])
            ("eieio-object-name-string" function (:arguments ("obj")) nil [10694 10839])
            ("define-obsolete-function-alias" code nil nil [10840 10928])
            ("eieio-object-set-name-string" function (:arguments ("obj" "name")) nil [10930 11132])
            ("define-obsolete-function-alias" code nil nil [11133 11228])
            ("eieio-object-class" function (:arguments ("obj")) nil [11230 11371])
            ("define-obsolete-function-alias" code nil nil [11372 11446])
            ("define-obsolete-function-alias" code nil nil [11468 11538])
            ("eieio-object-class-name" function (:arguments ("obj")) nil [11540 11717])
            ("define-obsolete-function-alias" code nil nil [11718 11803])
            ("eieio-class-parents" function (:arguments ("class")) nil [11805 12048])
            ("define-obsolete-function-alias" code nil nil [12049 12125])
            ("eieio-class-children" function (:arguments ("class")) nil [12127 12343])
            ("define-obsolete-function-alias" code nil nil [12344 12424])
            ("define-obsolete-function-alias" code nil nil [12454 12544])
            ("define-obsolete-function-alias" code nil nil [12545 12634])
            ("eieio-class-parent" function (:arguments ("class")) nil [12636 12776])
            ("define-obsolete-function-alias" code nil nil [12777 12850])
            ("same-class-p" function (:arguments ("obj" "class")) nil [12852 13035])
            ("object-of-class-p" function (:arguments ("obj" "class")) nil [13037 13282])
            ("defalias" code nil nil [13310 13355])
            ("child-of-class-p" function (:arguments ("child" "class")) nil [13357 13705])
            ("object-slots" function (:arguments ("obj")) nil [13707 13879])
            ("class-slot-initarg" function (:arguments ("class" "slot")) nil [13881 14186])
            ("oset" function (:arguments ("obj" "slot" "value")) nil [14213 14462])
            ("oset-default" function (:arguments ("class" "slot" "value")) nil [14464 14775])
            ("slot-boundp" function (:arguments ("object" "slot")) nil [14820 15405])
            ("slot-makeunbound" function (:arguments ("object" "slot")) nil [15407 15520])
            ("slot-exists-p" function (:arguments ("object-or-class" "slot")) nil [15522 15893])
            ("find-class" function (:arguments ("symbol" "errorp")) nil [15895 16224])
            ("object-assoc" function (:arguments ("key" "slot" "list")) nil [16285 16828])
            ("object-assoc-list" function (:arguments ("slot" "list")) nil [16830 17293])
            ("object-assoc-list-safe" function (:arguments ("slot" "list")) nil [17295 17839])
            ("object-add-to-list" function (:arguments ("object" "slot" "item" "append")) nil [17841 18646])
            ("object-remove-from-list" function (:arguments ("object" "slot" "item")) nil [18648 18998])
            ("next-method-p" function nil nil [19033 19212])
            ("call-next-method" function (:arguments ("replacement-args")) nil [19214 20386])
            ("defsetf" code nil nil [20446 20477])
            ("if" code nil nil [20479 21092])
            ("eieio-default-superclass" type (:type "class") nil [21477 21744])
            ("defalias" code nil nil [21746 21798])
            ("constructor" function (:arguments ("newname" "slots")) nil [21800 21914])
            ("constructor" function
               (:parent "eieio-default-superclass"
                :arguments ("class" "newname" "slots"))
                nil [21916 22750])
            ("shared-initialize" function (:arguments ("slots")) nil [22752 22900])
            ("shared-initialize" function
               (:parent "eieio-default-superclass"
                :arguments ("obj" "slots"))
                nil [22902 23397])
            ("initialize-instance" function (:arguments ("slots")) nil [23399 23504])
            ("initialize-instance" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "slots"))
                nil [23506 24972])
            ("slot-missing" function (:arguments ("slot-name" "operation" "new-value")) nil [24974 25117])
            ("slot-missing" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "slot-name" "operation" "new-value"))
                nil [25119 25644])
            ("slot-unbound" function (:arguments ("class" "slot-name" "fn")) nil [25646 25775])
            ("slot-unbound" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "class" "slot-name" "fn"))
                nil [25777 26550])
            ("no-applicable-method" function (:arguments ("method" "args")) nil [26552 26677])
            ("no-applicable-method" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "method" "args"))
                nil [26679 27142])
            ("no-next-method" function (:arguments ("args")) nil [27144 27266])
            ("no-next-method" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "args"))
                nil [27268 27754])
            ("clone" function (:arguments ("params")) nil [27756 28016])
            ("clone" function
               (:parent "eieio-default-superclass"
                :arguments ("obj" "params"))
                nil [28018 28654])
            ("destructor" function (:arguments ("params")) nil [28656 28763])
            ("destructor" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "params"))
                nil [28765 29013])
            ("object-print" function (:arguments ("strings")) nil [29015 29312])
            ("object-print" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "strings"))
                nil [29314 29928])
            ("eieio-print-depth" variable nil nil [29930 30022])
            ("object-write" function (:arguments ("comment")) nil [30024 30190])
            ("object-write" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "comment"))
                nil [30192 32123])
            ("eieio-override-prin1" function (:arguments ("thing")) nil [32125 32524])
            ("eieio-list-prin1" function (:arguments ("list")) nil [32526 33043])
            ("change-class" function (:arguments ("obj" "class")) nil [33088 33293])
            ("add-hook" code nil nil [33366 33434])
            ("add-hook" code nil nil [33435 33507])
            ("eieio-edebug-prin1-to-string" function (:arguments ("object" "noescape")) nil [33540 34053])
            ("add-hook" code nil nil [34055 35346])
            ("customize-object" function (:prototype-flag t) nil [35537 35715])
            ("eieio-browse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35854 36085])
            ("eieio-help-class" function (:prototype-flag t) nil [36087 36267])
            ("eieio-help-constructor" function (:prototype-flag t) nil [36269 36381])
            ("eieio-help-generic" function (:prototype-flag t) nil [36383 36498])
            ("eieio" package nil nil [36556 36572]))          
      :file "eieio.el.gz"
      :pointmax 36594
      :fsize 11538
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax '((close-paren 1804 . 1805) (symbol 1773 . 1790) (open-paren 1772 . 1773))))
  :file "!usr!share!emacs!24.5!lisp!emacs-lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
