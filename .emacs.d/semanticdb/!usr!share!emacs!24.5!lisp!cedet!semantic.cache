;; Object cedet/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "cedet/"
  :tables
  (list
    (semanticdb-table "inversion.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("inversion-version" variable (:default-value "1.3") nil [2257 2323])
            ("inversion-incompatible-version" variable (:default-value "0.1alpha1") nil [2325 2440])
            ("inversion-decoders" variable
               (:constant-flag t
                :default-value (quote ((alpha "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.?\\([0-9]*\\)?\\s-*\\.?alpha\\([0-9]+\\)?$" 4) (beta "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.?\\([0-9]*\\)?\\s-*\\.?beta\\([0-9]+\\)?$" 4) (beta "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.?\\([0-9]*\\)?\\s-*\\.?(beta\\([0-9]+\\)?)$" 4) (beta "^[^/]+/\\w+--\\w+--\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\)--patch-\\([0-9]+\\)" 4) (beta "^\\w+: v\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\)-\\([0-9]+\\)-\\(.*\\)" 5) (prerelease "^\\([0-9]+\\)\\.\\([0-9]+\\)\\s-*\\.?pre\\([0-9]+\\)?$" 3) (full "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.?\\([0-9]+\\)?$" 3) (fullsingle "^\\([0-9]+\\)$" 1) (patch "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.?\\([0-9]+\\)?\\s-*(patch \\([0-9]+\\))" 4) (point "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\)$" 3) (point "^\\w+: v\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\)-\\(0\\)-\\(.*\\)" 5) (build "^\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\).\\([0-9]+\\)$" 4) (full "^[^/]+/\\w+--\\w+--\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\)--version-\\([0-9]+\\)" 4) (full "^\\w+: v\\([0-9]+\\)\\.\\([0-9]+\\)\\.\\([0-9]+\\)" 5))))
                nil [2442 3978])
            ("inversion-decode-version" function (:arguments ("version-string")) nil [4004 4792])
            ("inversion-package-version" function (:arguments ("package")) nil [4794 5256])
            ("inversion-package-incompatibility-version" function (:arguments ("package")) nil [5258 5757])
            ("inversion-recode" function (:arguments ("code")) nil [5759 6100])
            ("inversion-release-to-number" function (:arguments ("release-symbol")) nil [6102 6342])
            ("inversion-=" function (:arguments ("ver1" "ver2")) nil [6344 6440])
            ("inversion-<" function (:arguments ("ver1" "ver2")) nil [6442 7276])
            ("inversion-check-version" function (:arguments ("version" "incompatible-version" "minimum" "reserved")) nil [7278 8718])
            ("inversion-test" function (:arguments ("package" "minimum" "reserved")) nil [8720 9937])
            ("inversion-reverse-test" function (:arguments ("package" "oldversion" "reserved")) nil [9939 11350])
            ("inversion-require" function (:arguments ("package" "version" "file" "directory" "reserved")) nil [11352 12113])
            ("inversion-require-emacs" function (:arguments ("emacs-ver" "xemacs-ver" "sxemacs-ver")) nil [12130 12559])
            ("inversion-find-data" variable
               (:constant-flag t
                :default-value (quote ("(def\\(var\\|const\\)\\s-+%s-%s\\s-+\"\\([^\"]+\\)" 2)))
                nil [12561 12713])
            ("inversion-find-version" function (:arguments ("package")) nil [12715 13992])
            ("inversion-add-to-load-path" function (:arguments ("package" "minimum" "installdir" "subdirs")) nil [13994 15954])
            ("inversion-locate-package-files" function (:arguments ("package" "directory" "version")) nil [15988 16701])
            ("inversion-package-common-tails" variable (:default-value (quote (".tar.gz" ".tar" ".zip" ".gz"))) nil [16703 16861])
            ("inversion-locate-package-files-and-split" function (:arguments ("package" "directory" "version")) nil [16863 17922])
            ("inversion-download-package-ask" function (:arguments ("err" "package" "directory" "version")) nil [17924 18772])
            ("inversion" package nil nil [19662 19682]))          
      :file "inversion.el.gz"
      :pointmax 19711
      :fsize 6096
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!24.5!lisp!cedet!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
