;; Object cedet/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "cedet/"
  :tables
  (list
    (semanticdb-table "mode-local.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1786 1799])
            ("mode-local-map-file-buffers" function (:arguments ("function" "predicate" "buffers")) nil [1824 2498])
            ("get-mode-local-parent" function (:arguments ("mode")) nil [2500 2699])
            ("mode-local-equivalent-mode-p" function (:arguments ("mode")) nil [2835 3079])
            ("mode-local-map-mode-buffers" function (:arguments ("function" "modes")) nil [3081 3551])
            ("mode-local-init-hook" variable nil nil [3576 3711])
            ("mode-local-changed-mode-buffers" variable nil nil [3713 3818])
            ("mode-local--init-mode" variable nil nil [3820 3854])
            ("mode-local-initialized-p" function nil nil [3856 4116])
            ("mode-local-post-major-mode-change" function nil nil [4118 4724])
            ("mode-local-on-major-mode-change" function nil nil [4726 4956])
            ("set-mode-local-parent" function (:arguments ("mode" "parent")) nil [4979 5474])
            ("define-child-mode" function (:arguments ("mode" "parent" "docstring")) nil [5476 5760])
            ("mode-local-use-bindings-p" function (:arguments ("this-mode" "desired-mode")) nil [5762 6054])
            ("mode-local-symbol-table" variable nil nil [6083 6290])
            ("make-variable-buffer-local" code nil nil [6291 6344])
            ("mode-local-active-mode" variable nil nil [6346 6426])
            ("new-mode-local-bindings" function nil nil [6428 6537])
            ("mode-local-bind" function (:arguments ("bindings" "plist" "mode")) nil [6539 9652])
            ("mode-local-symbol" function (:arguments ("symbol" "mode")) nil [9654 10538])
            ("mode-local-symbol-value" function (:arguments ("symbol" "mode" "property")) nil [10540 11114])
            ("activate-mode-local-bindings" function (:arguments ("mode")) nil [11145 12889])
            ("deactivate-mode-local-bindings" function (:arguments ("mode")) nil [12891 13567])
            ("with-mode-local-symbol" function (:arguments ("mode" "body")) nil [13569 14965])
            ("put" code nil nil [14966 15019])
            ("with-mode-local" function (:arguments ("mode" "body")) nil [15021 15404])
            ("put" code nil nil [15405 15451])
            ("mode-local-value" function (:arguments ("mode" "sym")) nil [15454 15650])
            ("setq-mode-local" function (:arguments ("mode" "args")) nil [15652 16817])
            ("defvar-mode-local" function (:arguments ("mode" "sym" "val" "docstring")) nil [16819 17106])
            ("put" code nil nil [17107 17160])
            ("defconst-mode-local" function (:arguments ("mode" "sym" "val" "docstring")) nil [17162 17549])
            ("put" code nil nil [17550 17605])
            ("make-obsolete-overload" function (:arguments ("old" "new" "when")) nil [17636 17959])
            ("overload-obsoleted-by" function (:arguments ("overload")) nil [17961 18139])
            ("overload-that-obsolete" function (:arguments ("overload")) nil [18141 18341])
            ("fetch-overload" function (:arguments ("overload")) nil [18343 18832])
            ("mode-local--override" function (:arguments ("name" "args" "body")) nil [18834 19512])
            ("mode-local--expand-overrides" function (:arguments ("name" "args" "body")) nil [19514 20413])
            ("mode-local--overload-body" function (:arguments ("name" "args" "body")) nil [20415 20808])
            ("put" code nil nil [20825 20878])
            ("define-overloadable-function" function (:arguments ("name" "args" "docstring" "body")) nil [20880 22190])
            ("put" code nil nil [22191 22240])
            ("defalias" code nil nil [22242 22299])
            ("function-overload-p" function (:arguments ("symbol")) nil [22301 22474])
            ("define-mode-local-override" function (:arguments ("name" "mode" "args" "docstring" "body")) nil [22476 23432])
            ("mode-local-read-function" function (:arguments ("prompt" "initial" "hist" "default")) nil [23458 23744])
            ("overload-docstring-extension" function (:arguments ("overload")) nil [23767 24416])
            ("mode-local-augment-function-help" function (:arguments ("symbol")) nil [24418 24949])
            ("mode-local-print-binding" function (:arguments ("symbol")) nil [24984 25379])
            ("mode-local-print-bindings" function (:arguments ("table")) nil [25381 26610])
            ("mode-local-describe-bindings-2" function (:arguments ("buffer-or-mode")) nil [26612 27532])
            ("mode-local-describe-bindings-1" function (:arguments ("buffer-or-mode" "interactive-p")) nil [27534 28451])
            ("describe-mode-local-bindings" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [28453 28685])
            ("describe-mode-local-bindings-in-mode" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [28687 29074])
            ("mode-local-setup-edebug-specs" function nil nil [29699 30306])
            ("add-hook" code nil nil [30308 30368])
            ("add-hook" code nil nil [30370 30431])
            ("add-hook" code nil nil [30432 30499])
            ("mode-local" package nil nil [30501 30522]))          
      :file "mode-local.el.gz"
      :pointmax 30552
      :fsize 8448
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax '((close-paren 1799 . 1800) (symbol 1768 . 1785) (open-paren 1767 . 1768)))
    (semanticdb-table "semantic.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cedet" include nil nil [1379 1395])
            ("semantic/tag" include nil nil [1396 1419])
            ("semantic/lex" include nil nil [1420 1443])
            ("semantic-version" variable (:default-value "2.2") nil [1445 1509])
            ("declare-function" code nil nil [1511 1556])
            ("declare-function" code nil nil [1557 1628])
            ("semantic-require-version" function (:arguments ("major" "minor" "beta")) nil [1630 2208])
            ("semantic" customgroup (:user-visible-flag t) nil [2210 2292])
            ("semantic-faces" customgroup (:user-visible-flag t) nil [2294 2385])
            ("semantic/fw" include nil nil [2387 2409])
            ("semantic--parse-table" variable nil nil [2460 2655])
            ("make-variable-buffer-local" code nil nil [2656 2707])
            ("semantic-varalias-obsolete" code nil nil [2708 2805])
            ("semantic-symbol->name-assoc-list" variable (:default-value (quote ((type . "Types") (variable . "Variables") (function . "Functions") (include . "Dependencies") (package . "Provides")))) nil [2807 3346])
            ("make-variable-buffer-local" code nil nil [3347 3409])
            ("semantic-symbol->name-assoc-list-for-type-parts" variable nil nil [3411 3845])
            ("make-variable-buffer-local" code nil nil [3846 3923])
            ("semantic-case-fold" variable nil nil [3925 4003])
            ("make-variable-buffer-local" code nil nil [4004 4052])
            ("semantic-expand-nonterminal" variable nil nil [4054 4546])
            ("make-variable-buffer-local" code nil nil [4547 4604])
            ("semantic--buffer-cache" variable nil nil [4606 5019])
            ("make-variable-buffer-local" code nil nil [5020 5072])
            ("semantic-varalias-obsolete" code nil nil [5073 5171])
            ("semantic-unmatched-syntax-cache" variable nil nil [5173 5263])
            ("make-variable-buffer-local" code nil nil [5264 5325])
            ("semantic-unmatched-syntax-cache-check" variable nil nil [5327 5484])
            ("make-variable-buffer-local" code nil nil [5485 5552])
            ("semantic-edits-are-safe" variable nil nil [5554 5904])
            ("semantic-unmatched-syntax-hook" variable nil nil [5906 6531])
            ("semantic--before-fetch-tags-hook" variable nil nil [6533 6831])
            ("semantic-varalias-obsolete" code nil nil [6832 6950])
            ("semantic-after-toplevel-bovinate-hook" variable nil nil [6952 7311])
            ("make-obsolete-variable" code nil nil [7312 7386])
            ("semantic-after-toplevel-cache-change-hook" variable nil nil [7388 7828])
            ("semantic-before-toplevel-cache-flush-hook" variable nil nil [7830 8180])
            ("semantic-dump-parse" variable nil nil [8182 8297])
            ("semantic-parser-name" variable (:default-value "LL") nil [8299 8393])
            ("make-variable-buffer-local" code nil nil [8394 8444])
            ("semantic--completion-cache" variable nil nil [8446 8543])
            ("make-variable-buffer-local" code nil nil [8544 8600])
            ("semantic-parse-tree-state" variable (:default-value (quote needs-rebuild)) nil [8642 8728])
            ("make-variable-buffer-local" code nil nil [8729 8784])
            ("semantic-parse-tree-unparseable" function nil nil [8786 9069])
            ("semantic-parse-tree-unparseable-p" function nil nil [9071 9235])
            ("semantic-parse-tree-set-needs-update" function nil nil [9237 9458])
            ("semantic-parse-tree-needs-update-p" function nil nil [9460 9622])
            ("semantic-parse-tree-set-needs-rebuild" function nil nil [9624 9847])
            ("semantic-parse-tree-needs-rebuild-p" function nil nil [9849 10013])
            ("semantic-parse-tree-set-up-to-date" function nil nil [10015 10159])
            ("semantic-parse-tree-up-to-date-p" function nil nil [10161 10303])
            ("semantic-inhibit-functions" variable nil nil [10340 10581])
            ("semantic-new-buffer-setup-functions" variable (:default-value (quote ((c-mode . semantic-default-c-setup) (c++-mode . semantic-default-c-setup) (html-mode . semantic-default-html-setup) (java-mode . wisent-java-default-setup) (js-mode . wisent-javascript-setup-parser) (python-mode . wisent-python-default-setup) (scheme-mode . semantic-default-scheme-setup) (srecode-template-mode . srecode-template-setup-parser) (texinfo-mode . semantic-default-texi-setup) (makefile-automake-mode . semantic-default-make-setup) (makefile-gmake-mode . semantic-default-make-setup) (makefile-makepp-mode . semantic-default-make-setup) (makefile-bsdmake-mode . semantic-default-make-setup) (makefile-imake-mode . semantic-default-make-setup) (makefile-mode . semantic-default-make-setup)))) nil [10583 11814])
            ("semantic-init-hook" variable nil nil [11816 11911])
            ("semantic-init-mode-hook" variable nil nil [11913 12013])
            ("make-variable-buffer-local" code nil nil [12014 12067])
            ("semantic-init-db-hook" variable nil nil [12069 12339])
            ("semantic-varalias-obsolete" code nil nil [12341 12424])
            ("semantic-varalias-obsolete" code nil nil [12425 12518])
            ("semantic-varalias-obsolete" code nil nil [12519 12608])
            ("semantic-error-if-unparsed" function nil nil [12610 12807])
            ("semantic--umatched-syntax-needs-refresh-p" function nil nil [12809 13094])
            ("semantic-new-buffer-fcn" function nil nil [13096 14720])
            ("semantic-fetch-tags-fast" function nil nil [14722 14966])
            ("condition-case" code nil nil [15014 15060])
            ("semantic-edebug" variable nil nil [15063 15202])
            ("semantic-elapsed-time" function (:arguments ("start" "end")) nil [15204 15395])
            ("bovinate" function
               (:user-visible-flag t
                :arguments ("clear"))
                nil [15397 16116])
            ("semantic-parse-stream" function
               (:overloadable t
                :arguments ("stream" "nonterminal"))
                nil [16225 16811])
            ("semantic-parse-changes" function (:overloadable t) nil [16813 17060])
            ("semantic-parse-region" function
               (:overloadable t
                :arguments ("start" "end" "nonterminal" "depth" "returnonerror"))
                nil [17062 17892])
            ("semantic-parse-region-default" function (:arguments ("start" "end" "nonterminal" "depth" "returnonerror")) nil [17894 18946])
            ("semantic-set-unmatched-syntax-cache" function (:arguments ("unmatched-syntax")) nil [18974 19521])
            ("semantic-clear-unmatched-syntax-cache" function nil nil [19523 19712])
            ("semantic-unmatched-syntax-tokens" function nil nil [19714 20337])
            ("semantic-clear-toplevel-cache" function (:user-visible-flag t) nil [20339 21353])
            ("semantic-bovinate-nonterminal-check-obarray" variable nil nil [21355 21407])
            ("semantic--set-buffer-cache" function (:arguments ("tagtable")) nil [21409 22300])
            ("semantic-working-type" variable (:default-value (quote percent)) nil [22302 22504])
            ("semantic-varalias-obsolete" code nil nil [22505 22604])
            ("semantic-minimum-working-buffer-size" variable (:default-value (* 1024 5)) nil [22606 22845])
            ("semantic-parser-working-message" function (:arguments ("arg")) nil [22847 23162])
            ("semantic-fetch-tags" function nil nil [23385 26347])
            ("semantic-refresh-tags-safe" function nil nil [26349 27658])
            ("semantic-bovinate-toplevel" function (:arguments ("ignored")) nil [27660 27775])
            ("make-obsolete" code nil nil [27776 27847])
            ("semantic-fetch-available-tags" function nil nil [28108 28548])
            ("semantic-repeat-parse-whole-stream" function (:arguments ("stream" "nonterm" "returnonerror")) nil [28821 31034])
            ("semantic-parser-warnings" variable nil nil [31310 31406])
            ("make-variable-buffer-local" code nil nil [31407 31461])
            ("semantic-clear-parser-warnings" function nil nil [31463 31605])
            ("semantic-push-parser-warning" function (:arguments ("warning" "start" "end")) nil [31607 31830])
            ("semantic-dump-parser-warnings" function (:user-visible-flag t) nil [31832 32151])
            ("semantic-bovinate-region-until-error" function (:arguments ("start" "end" "nonterm" "depth")) nil [32343 32952])
            ("make-obsolete" code nil nil [32953 33051])
            ("semantic-bovinate-from-nonterminal" function (:arguments ("start" "end" "nonterm" "depth" "length")) nil [33053 33598])
            ("semantic-bovinate-from-nonterminal-full" function (:arguments ("start" "end" "nonterm" "depth")) nil [33600 34176])
            ("make-obsolete" code nil nil [34177 34278])
            ("semantic-force-refresh" function (:user-visible-flag t) nil [34300 34553])
            ("semantic-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map ",j" (quote semantic-complete-jump-local)) (define-key map ",J" (quote semantic-complete-jump)) (define-key map ",m" (quote semantic-complete-jump-local-members)) (define-key map ",g" (quote semantic-symref-symbol)) (define-key map ",G" (quote semantic-symref)) (define-key map ",p" (quote senator-previous-tag)) (define-key map ",n" (quote senator-next-tag)) (define-key map ",u" (quote senator-go-to-up-reference)) (define-key map ", " (quote semantic-complete-analyze-inline)) (define-key map "," (quote senator-kill-tag)) (define-key map ",\367" (quote senator-copy-tag)) (define-key map "," (quote senator-yank-tag)) (define-key map ",r" (quote senator-copy-tag-to-register)) (define-key map ",," (quote semantic-force-refresh)) (define-key map [3 44 up] (quote senator-transpose-tags-up)) (define-key map [3 44 down] (quote senator-transpose-tags-down)) (define-key map ",l" (quote semantic-analyze-possible-completions)) (define-key map [menu-bar cedet-menu] (list (quote menu-item) "Development" cedet-menu-map :enable (quote (not (and menu-bar-mode (bound-and-true-p global-ede-mode)))))) map)) nil [34555 36169])
            ("let" code nil nil [36220 42707])
            ("semantic-load-system-cache-loaded" variable nil nil [42860 43022])
            ("semantic-submode-list" variable
               (:constant-flag t
                :default-value (quote (global-semantic-highlight-func-mode global-semantic-decoration-mode global-semantic-stickyfunc-mode global-semantic-idle-completions-mode global-semantic-idle-scheduler-mode global-semanticdb-minor-mode global-semantic-idle-summary-mode global-semantic-mru-bookmark-mode global-cedet-m3-minor-mode global-semantic-idle-local-symbol-highlight-mode global-semantic-highlight-edits-mode global-semantic-show-unmatched-syntax-mode global-semantic-show-parser-state-mode)))
                nil [43024 43634])
            ("semantic-default-submodes" variable (:default-value (quote (global-semantic-idle-scheduler-mode global-semanticdb-minor-mode))) nil [43651 45304])
            ("define-minor-mode" code nil nil [45321 47925])
            ("semantic-completion-at-point-function" function nil nil [47927 48006])
            ("global-semantic-idle-completions-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48071 48285])
            ("semantic-idle-completions-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48287 48697])
            ("global-semantic-idle-summary-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48699 48905])
            ("semantic-idle-summary-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48907 49422])
            ("global-semantic-idle-local-symbol-highlight-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49424 49712])
            ("srecode-template-setup-parser" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49714 49842])
            ("semantic" package nil nil [49844 49863])
            ("semantic/util" include nil nil [49965 49989]))          
      :file "semantic.el.gz"
      :pointmax 50046
      :fsize 13539
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax '((close-paren 15060 . 15061) (symbol 14994 . 15011) (open-paren 14993 . 14994))))
  :file "!usr!share!emacs!24.5!lisp!cedet!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
