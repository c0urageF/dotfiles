;; Object .emacs.d/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".emacs.d/"
  :tables
  (list
    (semanticdb-table "init.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("add-to-list" code nil nil [1 39])
            ("add-to-list" code nil nil [40 73])
            ("add-to-list" code nil nil [158 208])
            ("add-to-list" code nil nil [209 259])
            ("add-to-list" code nil nil [260 302])
            ("package" include nil nil [304 322])
            ("add-to-list" code nil nil [323 406])
            ("add-to-list" code nil nil [407 497])
            ("add-to-list" code nil nil [498 586])
            ("add-to-list" code nil nil [587 658])
            ("fset" code nil nil [659 710])
            ("package-initialize" code nil nil [711 731])
            ("thingatpt" include nil nil [766 786])
            ("load" code nil nil [803 815])
            ("setq" code nil nil [933 965])
            ("setq" code nil nil [987 1014])
            ("setq" code nil nil [1028 1061])
            ("setq" code nil nil [1078 1108])
            ("global-hl-line-mode" code nil nil [1109 1130])
            ("setq-default" code nil nil [1143 1169])
            ("size-indication-mode" code nil nil [1184 1208])
            ("setq" code nil nil [1227 1257])
            ("setq" code nil nil [1278 1306])
            ("setq" code nil nil [1327 1355])
            ("set-face-background" code nil nil [1356 1401])
            ("custom-set-variables" code nil nil [1459 1544])
            ("custom-set-faces" code nil nil [1545 1563])
            ("setq" code nil nil [1577 1814])
            ("bat-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1816 1883])
            ("setq" code nil nil [1898 1960])
            ("if" code nil nil [1988 2194])
            ("setq" code nil nil [2224 2249])
            ("add-to-list" code nil nil [2260 2315])
            ("set-face-attribute" code nil nil [2329 2374])
            ("global-hl-line-mode" code nil nil [2389 2412])
            ("set-face-background" code nil nil [2419 2466])
            ("savehist-mode" code nil nil [2491 2508])
            ("setq-default" code nil nil [2532 2559])
            ("saveplace" include nil nil [2560 2580])
            ("show-paren-mode" code nil nil [2598 2617])
            ("global-set-key" code nil nil [2646 2696])
            ("display-time" code nil nil [2716 2730])
            ("line-number-mode" code nil nil [2748 2768])
            ("column-number-mode" code nil nil [2769 2791])
            ("linum" include nil nil [2792 2808])
            ("global-linum-mode" code nil nil [2809 2828])
            ("transient-mark-mode" code nil nil [2845 2868])
            ("set-face-background" code nil nil [2869 2912])
            ("setq" code nil nil [2940 2989])
            ("setq" code nil nil [3006 3034])
            ("setq" code nil nil [3060 3097])
            ("setq" code nil nil [3123 3148])
            ("defalias" code nil nil [3149 3181])
            ("setq" code nil nil [3198 3224])
            ("setq" code nil nil [3251 3277])
            ("setq" code nil nil [3327 3379])
            ("abort-recursive-edit" function (:arguments ("before" "minibuffer-save" "activate")) nil [3431 3627])
            ("defalias" code nil nil [3640 3673])
            ("tool-bar-mode" code nil nil [3695 3713])
            ("scroll-bar-mode" code nil nil [3714 3734])
            ("delete-selection-mode" code nil nil [3751 3776])
            ("ffap-bindings" code nil nil [3901 3916])
            ("uniquify" include nil nil [3931 3950])
            ("setq" code nil nil [3980 4042])
            ("setq" code nil nil [4066 4108])
            ("iswitchb-mode" code nil nil [4123 4140])
            ("setq" code nil nil [4171 4220])
            ("setq" code nil nil [4254 4280])
            ("setq" code nil nil [4311 4347])
            ("anzu" include nil nil [4426 4441])
            ("global-anzu-mode" code nil nil [4442 4463])
            ("auto-save-buffers" include nil nil [4834 4862])
            ("run-with-idle-timer" code nil nil [4863 4907])
            ("add-to-list" code nil nil [5050 5134])
            ("yasnippet" include nil nil [5197 5217])
            ("setq" code nil nil [5218 5314])
            ("yas-global-mode" code nil nil [5325 5344])
            ("define-key" code nil nil [5362 5429])
            ("define-key" code nil nil [5455 5519])
            ("define-key" code nil nil [5539 5610])
            ("when" code nil nil [5719 5867])
            ("when" code nil nil [5972 6047])
            ("redo+" include nil nil [6147 6163])
            ("global-set-key" code nil nil [6164 6200])
            ("setq" code nil nil [6201 6222])
            ("setq" code nil nil [6268 6292])
            ("setq" code nil nil [6293 6324])
            ("when" code nil nil [6423 6482])
            ("when" code nil nil [6484 6540])
            ("when" code nil nil [6645 6784])
            ("color-moccur" include nil nil [6884 6907])
            ("setq" code nil nil [6908 6934])
            ("moccur-edit" include nil nil [6961 6983])
            ("setq" code nil nil [7009 7035])
            ("igrep" include nil nil [7133 7149])
            ("igrep-define" code nil nil [7185 7257])
            ("igrep-find-define" code nil nil [7258 7335])
            ("grep-a-lot" include nil nil [7337 7358])
            ("grep-a-lot-setup-keys" code nil nil [7359 7382])
            ("grep-a-lot-advise" code nil nil [7398 7423])
            ("paredit" include nil nil [7530 7548])
            ("add-hook" code nil nil [7549 7602])
            ("add-hook" code nil nil [7603 7662])
            ("add-hook" code nil nil [7663 7710])
            ("add-hook" code nil nil [7711 7758])
            ("find-function-setup-keys" code nil nil [7760 7786])
            ("edit-list" include nil nil [7788 7808])
            ("hideif" include nil nil [7810 7827])
            ("add-hook" code nil nil [7828 7875])
            ("add-hook" code nil nil [8140 8199])
            ("put" code nil nil [8657 8691])
            ("helm" include nil nil [8792 8807])
            ("helm-config" include nil nil [8808 8830])
            ("helm-mode" code nil nil [8831 8844])
            ("define-key" code nil nil [8860 8915])
            ("define-key" code nil nil [8916 8982])
            ("define-key" code nil nil [9055 9108])
            ("define-key" code nil nil [9109 9167])
            ("define-key" code nil nil [9168 9224])
            ("define-key" code nil nil [9225 9274])
            ("define-key" code nil nil [9275 9335])
            ("define-key" code nil nil [9336 9412])
            ("define-key" code nil nil [9413 9488])
            ("setq" code nil nil [9532 9583])
            ("helm-delete-minibuffer-contents" function (:arguments ("before" "helm-emulate-kill-line" "activate")) nil [9584 9763])
            ("helm-ff-kill-or-find-buffer-fname" function (:arguments ("around" "execute-only-if-exist" "activate")) nil [9765 9943])
            ("helm-gtags" include nil nil [9945 9966])
            ("custom-set-variables" code nil nil [9968 10085])
            ("add-hook" code nil nil [10087 10921])
            ("when" code nil nil [10923 11490])
            ("when" code nil nil [11492 11830])
            ("global-set-key" code nil nil [11934 11971])
            ("setq" code nil nil [11992 12022])
            ("setq" code nil nil [12061 12095])
            ("setq" code nil nil [12141 12166])
            ("setq" code nil nil [12186 12218])
            ("autoinsert" include nil nil [12382 12403])
            ("setq" code nil nil [12404 12430])
            ("setq" code nil nil [12431 12464])
            ("setq" code nil nil [12465 12504])
            ("setq" code nil nil [12523 12572])
            ("setq" code nil nil [12599 12951])
            ("cl" include nil nil [12953 12966])
            ("template-replacements-alists" variable (:default-value (quote (("%file%" lambda nil (file-name-nondirectory (buffer-file-name))) ("%file-without-ext%" lambda nil (file-name-sans-extension (file-name-nondirectory (buffer-file-name)))) ("%date%" lambda nil (format-time-string "%Y-%m-%d %H:%M:%S")) ("%mail%" lambda nil (identity user-mail-address)) ("%name%" lambda nil (identity user-full-name)) ("%id%" lambda nil (identity user-id-string))))) nil [12967 13424])
            ("my-template" function nil nil [13426 13655])
            ("add-hook" code nil nil [13656 13706])
            ("when" code nil nil [13810 14656])
            ("company-mode/enable-yas" variable (:default-value t) nil [14675 14748])
            ("company-mode/backend-with-yas" function (:arguments ("backend")) nil [14749 15006])
            ("setq" code nil nil [15007 15088])
            ("irony" include nil nil [15190 15206])
            ("add-hook" code nil nil [15207 15242])
            ("add-hook" code nil nil [15243 15280])
            ("add-hook" code nil nil [15281 15319])
            ("add-hook" code nil nil [15320 15384])
            ("add-to-list" code nil nil [15385 15431])
            ("eval-after-load" code nil nil [15433 15717])
            ("when" code nil nil [15822 16320])
            ("eval-after-load" code nil nil [16322 16437])
            ("when" code nil nil [16536 16942])
            ("custom-set-variables" code nil nil [16944 16986])
            ("semantic-mode" code nil nil [17088 17105])
            ("global-semantic-idle-scheduler-mode" code nil nil [17106 17145])
            ("global-semanticdb-minor-mode" code nil nil [17146 17178])
            ("global-semantic-idle-completions-mode" code nil nil [17179 17220])
            ("global-semantic-decoration-mode" code nil nil [17221 17256])
            ("global-semantic-stickyfunc-mode" code nil nil [17257 17292])
            ("global-semantic-mru-bookmark-mode" code nil nil [17293 17330])
            ("srefactor" include nil nil [17435 17455])
            ("srefactor-lisp" include nil nil [17456 17481])
            ("define-key" code nil nil [17482 17548])
            ("define-key" code nil nil [17549 17617])
            ("python-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17719 17773])
            ("add-to-list" code nil nil [17774 17832])
            ("add-to-list" code nil nil [17833 17896])
            ("add-hook" code nil nil [17899 17997])
            ("add-hook" code nil nil [17999 18410])
            ("electric-pair" function (:user-visible-flag t) nil [18411 18552])
            ("jedi-core" include nil nil [18554 18574])
            ("setq" code nil nil [18575 18604])
            ("setq" code nil nil [18605 18632])
            ("add-hook" code nil nil [18633 18673])
            ("add-to-list" code nil nil [18674 18719])
            ("py-autopep8" include nil nil [18734 18756])
            ("setq" code nil nil [18757 18810])
            ("setq" code nil nil [18811 18857])
            ("py-autopep8-enable-on-save" code nil nil [18858 18886])
            ("flymake-mode" code nil nil [18888 18904])
            ("flymake-python-pyflakes" include nil nil [18926 18960])
            ("flymake-python-pyflakes-load" code nil nil [18961 18991])
            ("when" code nil nil [19091 19177])
            ("when" code nil nil [19179 19264])
            ("when" code nil nil [19266 19303])
            ("when" code nil nil [19305 19851])
            ("when" code nil nil [19853 20709])
            ("haskell-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20711 20756])
            ("haskell-cabal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20757 20804])
            ("add-to-list" code nil nil [20806 20863])
            ("add-to-list" code nil nil [20864 20931])
            ("add-to-list" code nil nil [20932 20998])
            ("ghc-init" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21000 21032])
            ("ghc-debug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21033 21066])
            ("add-hook" code nil nil [21068 21118])
            ("global-company-mode" code nil nil [21120 21143])
            ("add-to-list" code nil nil [21167 21211])
            ("my-haskell-mode-hook" function nil nil [21213 21580])
            ("add-hook" code nil nil [21581 21632])
            ("add-to-list" code nil nil [21664 21723])
            ("eval-after-load" code nil nil [21777 21846])
            ("add-hook" code nil nil [21888 22017])
            ("add-hook" code nil nil [22041 22081])
            ("add-hook" code nil nil [22102 22415]))          
      :file "init.el"
      :pointmax 22418
      :fsize 25165
      :lastmodtime '(23225 916 939117 556000)
      :unmatched-syntax '((close-paren 22417 . 22418) (symbol 22417 . 22421) (symbol 22417 . 22419) (symbol 22417 . 22420) (symbol 22417 . 22421))))
  :file "!home!c0urage!.emacs.d!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
