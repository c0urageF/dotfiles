;; Object textmodes/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "textmodes/"
  :tables
  (list
    (semanticdb-table "text-mode.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("text-mode-hook" variable nil nil [1007 1181])
            ("text-mode-variant" variable nil nil [1183 1321])
            ("text-mode-syntax-table" variable (:default-value (let ((st (make-syntax-table))) (modify-syntax-entry 34 ".   " st) (modify-syntax-entry 92 ".   " st) (modify-syntax-entry 39 "w p" st) (modify-syntax-entry 1523 "w   ") (modify-syntax-entry 1524 "w   ") (modify-syntax-entry 183 "w   ") (modify-syntax-entry 8231 "w   ") (modify-syntax-entry 65306 "w   ") st)) nil [1323 2607])
            ("text-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ispell-complete-word)) (define-key map [menu-bar text] (cons "Text" (make-sparse-keymap "Text"))) (bindings--define-key map [menu-bar text toggle-text-mode-auto-fill] (quote (menu-item "Auto Fill" toggle-text-mode-auto-fill :button (:toggle memq (quote turn-on-auto-fill) text-mode-hook) :help "Automatically fill text while typing in text modes (Auto Fill mode)"))) (bindings--define-key map [menu-bar text paragraph-indent-minor-mode] (quote (menu-item "Paragraph Indent" paragraph-indent-minor-mode :button (:toggle bound-and-true-p paragraph-indent-minor-mode) :help "Toggle paragraph indent minor mode"))) (bindings--define-key map [menu-bar text sep] menu-bar-separator) (bindings--define-key map [menu-bar text center-region] (quote (menu-item "Center Region" center-region :help "Center the marked region" :enable (region-active-p)))) (bindings--define-key map [menu-bar text center-paragraph] (quote (menu-item "Center Paragraph" center-paragraph :help "Center the current paragraph"))) (bindings--define-key map [menu-bar text center-line] (quote (menu-item "Center Line" center-line :help "Center the current line"))) map)) nil [2609 4160])
            ("define-derived-mode" code nil nil [4164 4716])
            ("define-derived-mode" code nil nil [4718 5292])
            ("define-minor-mode" code nil nil [5294 6477])
            ("defalias" code nil nil [6479 6520])
            ("text-mode-hook-identify" function nil nil [6622 6833])
            ("add-hook" code nil nil [6835 6886])
            ("toggle-text-mode-auto-fill" function (:user-visible-flag t) nil [6888 7595])
            ("define-key" code nil nil [7599 7651])
            ("center-paragraph" function (:user-visible-flag t) nil [7653 7953])
            ("center-region" function
               (:user-visible-flag t
                :arguments ("from" "to"))
                nil [7955 8379])
            ("define-key" code nil nil [8381 8428])
            ("center-line" function
               (:user-visible-flag t
                :arguments ("nlines"))
                nil [8430 9327]))          
      :file "text-mode.el.gz"
      :pointmax 9356
      :fsize 3239
      :lastmodtime '(21885 55889 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!24.5!lisp!textmodes!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
